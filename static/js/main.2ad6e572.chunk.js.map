{"version":3,"sources":["util/serverVariables.js","context/AuthContext.js","context/ItemContext.js","context/CartContext.js","context/DisplayItemsContext.js","context/MessageContext.js","components/navbar/NavbarLogo.js","components/navbar/NavbarMessage.js","components/navbar/Navbar.js","components/footer/Footer.js","components/loading/LoadingSmall.js","components/main/filter/FilterBox.js","components/main/filter/Filter.js","components/main/MainHero.js","components/main/MainItem.js","components/main/MainEmpty.js","util/pagination.js","components/main/MainMenu.js","components/main/sort/Sort.js","components/main/Main.js","components/about/AboutHero.js","components/about/AboutUs.js","components/about/AboutDo.js","components/about/AboutContactForm.js","components/about/AboutContact.js","components/about/About.js","components/loading/LoadingLarge.js","components/item/ItemImg.js","components/item/ItemInfoPrice.js","components/item/ItemInfoProtections.js","components/item/ItemInfoQuantity.js","components/item/ItemInfoVariations.js","components/item/ItemInfo.js","components/item/ItemReviewsCard.js","components/item/ItemReviewsCon.js","components/item/ItemReviewsForm.js","components/item/ItemReviews.js","components/item/Item.js","util/getOrder.js","components/trackorder/TrackorderForm.js","components/trackorder/Trackorder.js","components/order/OrderAddressCard.js","components/order/OrderAddresses.js","components/order/OrderBarcode.js","components/order/OrderBasic.js","components/order/OrderItemCardDetails.js","components/order/OrderItemCardPricebox.js","components/order/OrderItemCard.js","components/order/OrderItems.js","components/order/OrderStatus.js","components/order/OrderTotal.js","components/order/Order.js","components/cart/CartItemCardImg.js","components/cart/CartItemCardInfo.js","components/cart/CartItemCardQuantity.js","components/cart/CartItemCardSubtotal.js","components/cart/CartItemCard.js","components/cart/CartItems.js","components/cart/CartTotal.js","components/cart/Cart.js","components/account/Account.js","components/reglog/ReglogFormGrp.js","components/reglog/ReglogForm.js","components/register/RegistrationSuccess.js","components/register/Register.js","components/login/Login.js","components/error/Error.js","components/checkout/CheckoutFormGrp.js","components/checkout/CheckoutFormItem.js","data/form.js","components/checkout/CheckoutForm.js","components/checkout/CheckoutInfoItemCard.js","components/checkout/CheckoutInfoPriceCard.js","components/checkout/CheckoutInfo.js","components/checkout/Checkout.js","data/adminForm.js","components/admin/adminItemForm/AdminItemFormGrp.js","components/admin/adminItemForm/AdminItemForm.js","components/admin/adminAdd/AdminAdd.js","components/admin/adminEdit/AdminEditSearch.js","components/admin/adminEdit/AdminEdit.js","components/admin/adminMain/AdminMainItemsCard.js","components/admin/adminMain/AdminMainItems.js","components/admin/adminMain/AdminMain.js","components/admin/adminNav/AdminNavItem.js","components/admin/adminNav/AdminNav.js","components/admin/adminOrders/AdminOrders.js","components/admin/Admin.js","components/content/Content.js","App.js","index.js"],"names":["SERVER_URL","AuthContext","React","createContext","AuthContextFunctions","useAuth","useContext","useAuthFunctions","AuthProvider","children","useState","admin","setAdmin","prevUser","localStorage","getItem","JSON","parse","id","fetch","method","headers","access","then","response","json","result","detail","logout","checkAdmin","checkAuth","user","setUser","a","username","password","body","stringify","Headers","setItem","removeItem","email","Provider","value","login","logoutKeepCart","loginOutTest","register","ItemContext","useItems","ItemProvider","getItems","items","setItems","displayItems","refreshItems","updateItems","itemID","newItem","originalItemIndex","findIndex","item","newItems","prevItems","getItemDetails","filter","getItemPriceCurrent","querySet","Number","price_current","CartContext","useCart","CartProvider","checkPreviousCart","cart","setCart","currentCart","setCurrentCart","subtotal","setSubtotal","PrevCart","map","variationID","console","log","updateCart","newCart","changeCartItemQuantity","prevItemIndex","quantity","checkQuantityValidity","getPrevCartItemIndex","newQuantity","useEffect","length","i","initialSubtotal","reduce","acc","cur","mask","toFixed","getCartLatestDetails","getCartTotalItems","getCartSubtotal","addCartItem","cartItem","removeCartItem","resetCart","DisplayItemsContext","useDisplayItems","DisplayItemsProvider","setFilter","type","protection","origin","brand","filterOptions","setFilterOptions","sortOption","setSortOption","changeFilter","category","newfilterChoices","includes","push","newFilterOptions","options","Set","key","temp","tempResult","forEach","option","filteredResult","mask_type","protections","country","name","add","filteredItems","Array","from","filterItems","resetFilter","sortItems","SORT_FUNCTIONS","newest","b","Date","timestamp_updated","oldest","priceLow","priceHigh","sort","MessageContext","useMessage","MessageProvider","message","setMessage","displayMessage","content","closeMessage","NavbarLogo","to","className","NavbarMessage","onClick","NavbarLink","path","pageName","closeNavbar","cartNumbers","cartClassName","normal","NavbarLogout","location","useLocation","history","useHistory","state","replace","window","reload","Navbar","checkDisplayNavbar","displayNavbar","setDisplayNavbar","innerWidth","addEventListener","navbar","prevState","Footer","LoadingSmall","FilterBoxOptions","choice","onChange","checked","htmlFor","FilterBox","filterType","Filter","isOpen","setIsOpen","filterRef","useRef","filterBtnIconRef","filterContent","filterDisplay","ref","prevIsOpen","current","classList","style","border","MainHero","sloganH2","sloganP","MainItem","price_original","img","price","is_sale","src","alt","MainEmpty","pagination","input","itemsPerPage","Math","ceil","MainMenu","handlePagination","useCallback","paginatedItems","pages","currentPage","paginated","setPaginated","button","newCurrentPage","newPaginated","next","showMore","Sort","event","target","handleChange","Main","AboutHero","sloganActivate","setSloganActivate","slogan1","slogan2","handleMouseOverBtn","onMouseOver","onMouseLeave","AboutUs","AboutDoCard","job","icon","AboutDo","AboutContactFormGrp","label","autoComplete","rows","required","AboutContactForm","handleSubmit","onSubmit","AboutContact","sent","setSent","displayContent","preventDefault","Home","LoadingLarge","ItemImg","ItemInfoPrice","isSale","priceCurrent","priceOriginal","priceCurrentClass","priceOriginalContent","ItemInfoProtections","ItemInfoQuantity","inventory","handleChangeQuantity","defaultValue","numberOfOptions","disabled","ItemInfoVariations","variations","selectedVariation","setSelectedVariation","setQuantity","selected","selectedItem","handleSelect","variation","size","ItemInfo","description","toLowerCase","ItemReviewsCard","review","timestamp","moment","fromNow","ItemReviewsCon","reviews","setReviewsCallback","prevReviews","paginatedReviews","displayReviews","processedReviews","setProcessedReviews","newProcessedReviews","ItemReviewsForm","submitReview","loading","setLoading","trim","ItemReviews","Item","props","itemId","match","params","setReviews","reviewContent","getOrder","uuid","TrackorderForm","maxLength","Trackorder","error","setError","display","trackorderInput","isValid","validateUUID","displayError","OrderAddressCard","address","title","details","firstname","lastname","flat","apartment","street","area","district","OrderAddresses","order","shipping","billing","OrderBarcode","JsBarcode","lineColor","OrderBasicGrp","data","OrderBasic","timestampCreated","format","OrderItemCardDetails","OrderItemCardPricebox","gridArea","OrderItemCard","price_subtotal","OrderItems","OrderStatusCard","active","OrderStatus","shipping_method","status","processMiddle","processCollect","OrderTotalGrp","otherData","otherDataDisplay","OrderTotal","shipping_price","Order","orderID","setOrder","checkOrder","timestamp_created","CartItemCardImg","CartItemCardInfo","CartItemCardQuantity","currentQuantity","setCurrentQuantity","CartItemCardSubtotal","CartItemCard","CartItems","cartItemsDisplay","CartTotal","Cart","normalDisplay","emptyDisplay","Account","ReglogFormGrp","inputErrorClass","ReglogForm","page","forms","btnLabel","submitError","reglogLink","RegistrationSuccess","Register","setSubmitError","confirmpassword","errors","setErrors","regSuccess","setRegSuccess","FORM","document","querySelector","fields","field","prevErrors","checkValidity","setTimeout","Login","FORMS","Error","CheckoutFormGrp","section","choices","handleSelectShipping","Object","keys","inputError","radioError","CheckoutFormItem","CHECKOUT_FORM_FIELDS","payment","CheckoutForm","shippingMethod","shippingForm","CheckoutInfoItemCard","CheckoutInfoPriceCard","CheckoutInfo","total","displayInfo","Checkout","setShipping","setShippingMethod","calculateTotal","setTotal","shippingPrice","default","standard","priority","sections","isError","request","Authorization","pathname","submitOrder","shippingAddress","getFormInputs","billingAddress","getCartData","newShipping","ADMIN_FORM_FIELDS","createItem","choiceSource","AdminItemFormGrp","data-name","toUpperCase","errorClass","AdminItemForm","createEdit","setCurrentPage","editItem","formRef","checkForm","fieldName","fieldKey","errorMessage","other_brand","getData","SPECIAL","SKIP","SELECT","CHECKBOX","OTHERS","VARIATIONS","dataset","slice","formItem","populateFormData","scrollTo","AdminAdd","DISPLAY","form","newID","AdminEditSearch","searchItem","itemIDRef","handleSearch","AdminEdit","search","AdminMainItemsCard","AdminMainItems","AdminMain","AdminNavItem","link","AdminNav","AdminOrders","Admin","home","additem","edititem","orders","Content","cartPage","exact","checkout","account","adminPage","component","About","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ad6e572.chunk.js","sourcesContent":["export const SERVER_URL = \"https://g2mask2.herokuapp.com/\";\n//export const SERVER_URL = \"http://127.0.0.1:8000/\";","import React, { useContext, useState } from \"react\";\nimport { SERVER_URL } from \"../util/serverVariables\";\n\nconst AuthContext = React.createContext();\nconst AuthContextFunctions = React.createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function useAuthFunctions() {\n    return useContext(AuthContextFunctions);\n}\n\nexport const AuthProvider = ({ children }) => {\n\n    const [admin, setAdmin] = useState(false);\n    const [user, setUser] = useState(()=>checkAuth());\n    \n    function checkAuth() {\n        // Get user from localStorage\n        let prevUser = localStorage.getItem(\"user\");\n\n        // If there's no data, then user is not logged in\n        if (!prevUser) return false;\n\n        // If there's data, get AccessToken\n        prevUser = JSON.parse(prevUser);\n\n        // If not admin, call checkAdmin function\n        if (prevUser.id === 1) checkAdmin();\n\n        return prevUser;\n    }\n\n    function checkAdmin() {\n        // Get user from localStorage\n        let prevUser = localStorage.getItem(\"user\");\n\n        // If there's no data, then user is not logged in\n        if (!prevUser) return false;\n\n        // If there's data, parse JSON\n        prevUser =  JSON.parse(prevUser);\n\n        // Refresh the accessToken to check if admin is valid\n        return fetch(`${SERVER_URL}eshop/token/check_admin/`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${prevUser.access}`\n            },\n        })\n        .then(response => response.json())\n        .then(result => {\n            if (result.detail) {\n                logout();\n                setAdmin(false);\n                return false;\n            } else {\n                setAdmin(true);\n                return true;\n            }\n        });\n    }\n\n    function loginOutTest() {\n        setUser(prevUser => !prevUser);\n    }\n\n    async function login({username, password}) {\n        // Function to login\n        return fetch(`${SERVER_URL}eshop/token/`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username, \n                password,\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n            // If login fail, return false, else true\n            if (result.detail && result.detail === \"No active account found with the given credentials\") {\n                return false;\n            } else {\n                localStorage.setItem(\"user\", JSON.stringify(result));\n                setUser(result);\n\n                // If user is admin, set Admin\n                result.id === 1 && setAdmin(true);\n\n                return true;\n            }\n        });\n    }\n\n    function logout() {\n        // Function to logout\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"cart\");\n\n        setUser({});\n        setAdmin(false);\n        return;\n    }\n\n    function logoutKeepCart() {\n        // Function to logout\n        localStorage.removeItem(\"user\");\n        setUser({});\n        return;\n    }\n\n    async function register({username, email, password}) {\n        // Function to login\n        return fetch(`${SERVER_URL}eshop/users/registration/`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username,\n                email,\n                password\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n            // If login fail, return false, else true\n            if (result.detail) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    }\n\n    return(\n        <AuthContext.Provider value={{ user, admin }}>\n            <AuthContextFunctions.Provider value={{\n                login, logout, logoutKeepCart, loginOutTest, register\n            }}>\n                { children }\n            </AuthContextFunctions.Provider>\n        </AuthContext.Provider>\n    )\n}","import React, { useContext, useState } from \"react\";\nimport { SERVER_URL } from \"../util/serverVariables\";\n\nconst ItemContext = React.createContext();\n\nexport function useItems() {\n    return useContext(ItemContext);\n}\n\nexport const ItemProvider = ({ children }) => {\n\n    const [items, setItems] = useState(()=>getItems());\n\n    function getItems() {\n        // Get Items from server\n        fetch(`${SERVER_URL}eshop/masks/`)\n        .then(response => response.json())\n        .then(result => {\n            setItems({\n                items: result,\n                displayItems: result,\n            });\n        })\n    }\n\n    function getItemDetails(itemID) {\n        if (!items || !itemID) return;\n        return items.items.filter(item => item.id === itemID);\n    }\n\n    function getItemPriceCurrent(itemID) {\n        if (!items || !itemID) return;\n        let querySet = items.items.filter(item => item.id === itemID)[0];\n        // If no item is found, return;\n        if (!querySet) return;\n        return Number(querySet.price_current);\n    }\n\n    function updateItems({ itemID, newItem }) {\n        let originalItemIndex = items.items.findIndex(item => item.id === itemID);\n\n        let newItems = items.items;\n        newItems[originalItemIndex] = newItem;\n        setItems(prevItems => ({...prevItems, items: newItems, displayItems: newItems }))\n    }\n\n    async function refreshItems() {\n        // Get Items from server\n        return fetch(`${SERVER_URL}eshop/masks/`)\n        .then(response => response.json())\n        .then(result => {\n            setItems({\n                items: result,\n                displayItems: result,\n            });\n            return true;\n        })\n    }\n\n    return(\n        <ItemContext.Provider value={{ items, setItems, getItems, refreshItems, updateItems, getItemDetails, getItemPriceCurrent }}>\n            { children }\n        </ItemContext.Provider>\n    )\n}","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { SERVER_URL } from \"../util/serverVariables\";\nimport { useItems } from \"./ItemContext\";\n\nconst CartContext = React.createContext();\n\nexport function useCart() {\n    return useContext(CartContext);\n}\n\nexport const CartProvider = ({ children }) => {\n\n    const [cart, setCart] = useState(()=>checkPreviousCart());\n    const [currentCart, setCurrentCart] = useState(null);\n    const [subtotal, setSubtotal] = useState(0);\n    const { getItemPriceCurrent } = useItems();\n\n    useEffect(() => {\n        checkPreviousCart();\n\n        function getCartLatestDetails() {\n            if (cart.length === 0) {\n                setCurrentCart([]);\n                return\n            };\n            let items = cart.map(item => item.variationID);\n            \n            fetch(`${SERVER_URL}eshop/masks_variations_details/`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                    items\n                }),\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                })\n            })\n            .then(response => response.json())\n            .then(result => {\n                result = result.map((item, i) => ({...item, cart: cart[i]}));\n                setCurrentCart(result);\n                let initialSubtotal = result.reduce((acc, cur) => (acc + (cur.cart.quantity * cur.mask.price_current)), 0);\n                setSubtotal(initialSubtotal.toFixed(1));\n            })\n        }\n        getCartLatestDetails();\n    }, [cart])\n\n    function checkPreviousCart() {\n        // Get user from localStorage\n        let PrevCart = localStorage.getItem(\"cart\");\n\n        // If there's no data, then user is not logged in\n        if (!PrevCart) return [];\n\n        // If there's data, get AccessToken\n        return JSON.parse(PrevCart);\n    }\n\n    function getCartTotalItems() {\n        return cart ? cart.length : 0;\n    }\n\n    function getCartSubtotal() {\n        let result = cart.reduce((acc, cur)=> acc + (cur.quantity * getItemPriceCurrent(cur.itemID)), 0).toFixed(1);\n        setSubtotal(result);\n        return result;\n    }\n\n    async function getCartLatestDetails() {\n        let items = cart.map(item => item.variationID);\n        \n        return fetch(`${SERVER_URL}eshop/masks_variations_details/`, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        items\n                    }),\n                    headers: new Headers({\n                        'Content-Type': 'application/json'\n                    })\n                })\n                .then(response => response.json())\n                .then(result => {\n                    console.log(result);\n                    return result;\n                })\n    }\n\n    function updateCart(newCart) {\n        localStorage.setItem(\"cart\", JSON.stringify(newCart));\n        setCart(newCart);\n    }\n\n    function addCartItem({ itemID, variationID, quantity }) {\n        // Check quantity validity\n        if (!checkQuantityValidity(quantity) || !variationID) return;\n                \n        // Check if user has already put the item into the cart\n        let prevItemIndex = getPrevCartItemIndex(variationID);\n\n        // If already in the cart, amend quantity\n        if (prevItemIndex >= 0) {\n            changeCartItemQuantity({ prevItemIndex, variationID, quantity });\n        // Else, push to cart as new cart item\n        } else {\n            const cartItem = { itemID, variationID, quantity };\n            const newCart = [...cart, cartItem]\n            updateCart(newCart);\n        }\n    }\n\n    function removeCartItem(variationID) {\n        const newCart = cart.filter(item => item.variationID !== variationID);\n        updateCart(newCart);\n    }\n\n    function changeCartItemQuantity({ prevItemIndex, variationID, quantity }) {   \n        // Check quantity validity\n        if (!checkQuantityValidity(quantity)) return;\n\n        // If no prevItemIndex is provided, check if user has already put the item into the cart\n        if (!prevItemIndex) {\n            prevItemIndex = getPrevCartItemIndex(variationID);\n            if (prevItemIndex < 0) return;\n        }\n\n        // Cart item quantity cannot be smaller than 0 or larger than 50\n        let newQuantity = quantity;\n        if (newQuantity > 50 || newQuantity < 0 ) return;\n\n        // Set new quantity\n        cart[prevItemIndex].quantity = newQuantity;\n        const newCart = cart;\n        updateCart(newCart);\n    }\n\n    function checkQuantityValidity(quantity) {\n        // Quantity cannot be larger than 50 or smaller than -50\n        return quantity >= -50 || quantity <= 50;\n    }\n\n    function getPrevCartItemIndex(variationID) {\n        // Return the index of the cart item\n        return cart.findIndex(item => item.variationID === variationID);\n    }\n\n    function resetCart() {\n        setCart([]);\n        setCurrentCart([]);\n        setSubtotal(0);\n        localStorage.removeItem(\"cart\");\n    }\n\n    return(\n        <CartContext.Provider value={{ cart, setCart, currentCart, subtotal, getCartTotalItems, getCartSubtotal, getCartLatestDetails, addCartItem, removeCartItem, changeCartItemQuantity, checkQuantityValidity, resetCart }}>\n            { children }\n        </CartContext.Provider>\n    )\n}","import React, { useContext, useState } from \"react\";\nimport { SERVER_URL } from \"../util/serverVariables\";\n\nimport { useItems } from \"./ItemContext\"; // Import items for filter\n\nconst DisplayItemsContext = React.createContext();\n\nexport function useDisplayItems() {\n    return useContext(DisplayItemsContext);\n}\n\nexport const DisplayItemsProvider = ({ children }) => {\n\n    const { items, setItems } = useItems(); // Import items for filter\n\n    const [filter, setFilter] = useState(()=>getFilter());\n    const [filterOptions, setFilterOptions] = useState({\n        type: [],\n        protection: [],\n        origin: [],\n        brand: []\n    })\n    const [sortOption, setSortOption] = useState('newest');\n\n    function getFilter() {\n        fetch(`${SERVER_URL}eshop/filter/`)\n        .then(response => response.json())\n        .then(result => {\n            console.log(result);\n            setFilter(result);\n        })\n    }\n\n    function changeFilter({ category, value }) {\n        let newfilterChoices = filterOptions[category];\n\n        // If the original filterItems does not include input value, delete from original filterItems\n        if (newfilterChoices.includes(value)) {\n            newfilterChoices = newfilterChoices.filter(item => item !== value);\n        // Else, push to original filerItems\n        } else {\n            newfilterChoices.push(value);\n        }\n        \n        let newFilterOptions = {...filterOptions, [category]: newfilterChoices};\n\n        // Set filterItems\n        setFilterOptions(newFilterOptions);\n\n        filterItems({ options: newFilterOptions });\n\n    }\n\n    function resetFilter() {\n        let newItems = {\n            ...items,\n            displayItems: items.items\n        }\n        setSortOption('newest');\n        setItems(newItems);\n        setFilterOptions({\n            type: [],\n            protection: [],\n            origin: [],\n            brand: []\n        })\n    }\n\n    function filterItems({ options }) {\n        let result = new Set(items.items);\n\n        for (const key in options) {\n\n            // If type is empty, skip \n            if (options[key].length === 0) continue;\n\n            // Create temporary variables\n            let temp = new Set(result);\n            let tempResult = new Set();\n\n            // Iterate through temp to check if every item in the set matches every user's filter criteria\n            // If match, add to a temporary set and update the result set when finish\n            options[key].forEach(option => {\n\n                let filteredResult = [];\n\n                switch (key) {\n                    case \"type\": \n                        filteredResult = [...temp].filter(item => option === item.mask_type.category);\n                        break;\n                    case \"protection\":\n                        filteredResult = [...temp].filter(item => item.protections.includes(option));\n                        break;\n                    case \"origin\":\n                        filteredResult = [...temp].filter(item => option === item.origin.country);\n                        break;\n                    case \"brand\":\n                        filteredResult = [...temp].filter(item => option === item.brand.name);\n                        break;\n                    default:\n                        break;\n                }\n\n                filteredResult.forEach(item => tempResult.add(item));\n\n            })\n            result = new Set(tempResult);\n        }\n\n        let filteredItems = Array.from(result);\n        setItems(prevItems => ({\n            ...prevItems,\n            displayItems: filteredItems\n        }))\n        \n    }\n\n    function sortItems({ option }) {\n\n        const SORT_FUNCTIONS = {\n            newest: (a, b) => new Date(b.timestamp_updated) - new Date(a.timestamp_updated),\n            oldest: (a, b) => new Date(a.timestamp_updated) - new Date(b.timestamp_updated),\n            priceLow: (a, b) => a.price_current - b.price_current,\n            priceHigh: (a, b) => b.price_current - a.price_current\n        }\n        setSortOption(option);\n        setItems(prevItems => ({\n            ...prevItems,\n            displayItems: items.displayItems.sort(SORT_FUNCTIONS[option])\n        }))\n        \n    }\n\n    return(\n        <DisplayItemsContext.Provider value={{ filter, filterOptions, changeFilter, resetFilter, sortOption, sortItems }}>\n            { children }\n        </DisplayItemsContext.Provider>\n    )\n}","import React, { useContext, useState } from \"react\";\n\nconst MessageContext = React.createContext();\n\nexport function useMessage() {\n    return useContext(MessageContext);\n}\n\nexport const MessageProvider = ({ children }) => {\n\n    const [message, setMessage] = useState(false);\n\n    function displayMessage({ type, content }) {\n        setMessage({ type, content })\n    }\n\n    function closeMessage() {\n        setMessage(false)\n    }\n    \n    return(\n        <MessageContext.Provider value={{ message, displayMessage, closeMessage }}>\n            { children }\n        </MessageContext.Provider>\n    )\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst NavbarLogo = () => {\n    return (\n        <Link to=\"/\" id=\"navbarlogo\" className=\"navbarlogo\">\n            G2MASK\n        </Link>\n    )\n}\n\nexport default NavbarLogo;","import React from 'react'\nimport { useMessage } from '../../context/MessageContext';\n\n\n\nconst NavbarMessage = () => {\n\n    const { message, closeMessage } = useMessage();\n\n    const display = message && (\n        <div id=\"navbarMessage\" className=\"navbarMessage\">\n            <p className=\"navbarMessage__p\">{message.content}</p>\n            <button className=\"navbarMessage__btn\" onClick={()=>closeMessage()}>\n                <i className=\"navbarMessage__btn__i fas fa-times\"></i>\n            </button>\n        </div>\n    )\n\n    return display;\n}\n\nexport default NavbarMessage;","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n\nimport { useAuth, useAuthFunctions } from \"../../context/AuthContext\";\nimport { useCart } from \"../../context/CartContext\";\n\nimport NavbarLogo from \"./NavbarLogo\";\nimport NavbarMessage from './NavbarMessage';\n\nconst NavbarLink = ({ path, pageName, closeNavbar }) => {\n\n    const { getCartTotalItems } = useCart();\n\n    let cartNumbers = (pageName === \"CART\" && getCartTotalItems() > 0) && (\n        <p className=\"navbarcon__ul__li__link__cartNumber\">{getCartTotalItems()}</p>\n    );\n\n    let cartClassName = (pageName === \"CART\" && getCartTotalItems() > 0) && \"navbarcon__ul__li__link--cart\";\n\n    let normal = (\n        <Link to={path} className={`navbarcon__ul__li__link ${cartClassName}`} onClick={()=>closeNavbar(false)}>\n            {pageName}\n            {cartNumbers}\n        </Link>\n    )\n\n    return(\n        <li className=\"navbarcon__ul__li\">\n            { normal }\n        </li>\n    )\n}\n\nconst NavbarLogout = ({ closeNavbar }) => {\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const { logout } = useAuthFunctions();\n    const { resetCart } = useCart();\n\n\n    function handleClick() {\n        logout();\n        closeNavbar();\n        resetCart();\n        history.push(\"/\");\n        console.log(location.state)\n        history.replace(\"/\")\n        console.log(window.location)\n        window.location.reload();\n    }\n\n    return (\n        <li className=\"navbarcon__ul__li\">\n            <button className=\"navbarcon__ul__li__logout\" onClick={()=>handleClick()}>LOGOUT</button>\n        </li>\n    )\n}\n\nconst Navbar = () => {\n\n    const { user, admin } = useAuth();\n    const [displayNavbar, setDisplayNavbar] = useState(()=>checkDisplayNavbar());\n\n    useEffect(()=>{\n        window.addEventListener('resize', () => setDisplayNavbar(checkDisplayNavbar()));\n    })\n\n    function checkDisplayNavbar() {\n        let windowInnerWidth = window.innerWidth;\n\n        if (windowInnerWidth > 600) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function closeNavbar() {\n        if (checkDisplayNavbar()) return;\n        setDisplayNavbar(false);\n    }\n\n    const navbar = displayNavbar && (\n        <nav id=\"navbarcon\" className=\"navbarcon\">\n            <ul id=\"navbarcon__ul\" className=\"navbarcon__ul\">\n                <NavbarLink key=\"navbarlink-about\" path=\"/about\" pageName=\"ABOUT\" closeNavbar={closeNavbar} />\n                <NavbarLink key=\"navbarlink-home\" path=\"/\" pageName=\"SHOP\" closeNavbar={closeNavbar} />\n                <NavbarLink key=\"navbarlink-trackorder\" path=\"/trackorder\" pageName=\"TRACK ORDER\" closeNavbar={closeNavbar} />\n                <NavbarLink key=\"navbarlink-cart\" path=\"/cart\" pageName=\"CART\" closeNavbar={closeNavbar} />\n                {!user && <NavbarLink key=\"navbarlink-register\" path=\"/register\" pageName=\"REGISTER\" closeNavbar={closeNavbar} />}\n                {!user && <NavbarLink key=\"navbarlink-login\" path=\"/login\" pageName=\"LOGIN\" closeNavbar={closeNavbar} />}\n                {user && <NavbarLink key=\"navbarlink-account\" path=\"/account\" pageName=\"ACCOUNT\" closeNavbar={closeNavbar} />}\n                {user && <NavbarLogout key=\"navbarlink-logout\" closeNavbar={closeNavbar} />}\n                {admin && <NavbarLink key=\"navbarlink-admin\" path=\"/admin\" pageName=\"ADMIN\" closeNavbar={closeNavbar} />}\n            </ul>\n        </nav>\n    )\n\n    return (\n        <div id=\"navbar\" className=\"navbar\">\n            <NavbarLogo />\n            <button \n                className={`navbar__btn ${displayNavbar ? \"navbar__btn--close\" : \"navbar__btn--open\"}`}\n                onClick={()=>setDisplayNavbar(prevState => !prevState)}\n            >\n                <i className={`navbar__btn__i ${displayNavbar ? \"fas fa-times\" : \"fas fa-bars\"}`} />\n            </button>\n            { navbar }\n            <NavbarMessage />\n        </div>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n    return (\n        <div id=\"footer\" className=\"footer\">\n            <div id=\"footerLogo\" className=\"footerLogo\">\n                <Link to=\"/\" className=\"footerLogo__link\">\n                    G2MASK\n                </Link>\n            </div>\n            <div id=\"footernav\" className=\"footernav\">\n                <Link to=\"/about\" className=\"footernav__link\">ABOUT</Link>\n                <Link to=\"/about\" className=\"footernav__link\">CAREER</Link>\n                <Link to=\"/about\" className=\"footernav__link\">CONTACT</Link>\n            </div>\n            <div id=\"footerFollow\" className=\"footerFollow\">\n                <h2 className=\"footerFollow__h2\">FOLLOW US ON:</h2>\n                <div id=\"footerFollow__div\" className=\"footerFollow__div\">\n                    <i className=\"footerFollow__div__i fab fa-facebook-f\"></i>\n                    <i className=\"footerFollow__div__i fab fa-twitter\"></i>\n                    <i className=\"footerFollow__div__i fab fa-instagram\"></i>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react'\n\nconst LoadingSmall = () => {\n    return (\n        <div id=\"loadingSmall\" className=\"loadingSmall\">\n            <i className=\"loadingSmall__i fas fa-spinner\"></i>\n        </div>\n    )\n}\n\nexport default LoadingSmall;\n","import React, { } from 'react';\nimport { useDisplayItems } from \"../../../context/DisplayItemsContext\";\n\nconst FilterBoxOptions = ({ option: { id, category, choice, value } }) => {\n    \n    const { filterOptions, changeFilter } = useDisplayItems();\n\n    return (\n        <div className=\"filterbox__option\">\n            <input \n                type=\"checkbox\" \n                id={`filterbox-option-${value}`} \n                className=\"filterbox__option__input\" \n                name={category} \n                value={id} \n                onChange={()=>changeFilter({category, value})}\n                checked={filterOptions[category].includes(value)}\n            />\n            <div className=\"filterbox__option__div\"></div>\n            <label htmlFor={`filterbox-option-${value}`} className=\"filterbox__option__label\" >{choice}</label>\n        </div>\n    )\n}\n\nconst FilterBox = ({ filterType, options }) => {\n    return (\n        <div id={`filterbox-${filterType}`} className=\"filterbox\">\n            <h3 className=\"filterbox__h3\">{filterType}</h3>\n            <div className=\"filterbox__options\">\n                {options.map((option, i) => (\n                    <FilterBoxOptions\n                        key={`filterboxoptions-${filterType}-${i}`}\n                        option={option}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default FilterBox;","import React, { useRef, useState } from 'react'\nimport LoadingSmall from '../../loading/LoadingSmall';\nimport { useDisplayItems } from \"../../../context/DisplayItemsContext\";\nimport FilterBox from './FilterBox';\n\nconst Filter = () => {\n\n    const { filter, resetFilter } = useDisplayItems();\n    const [isOpen, setIsOpen] = useState(false);\n    let filterRef = useRef();\n    let filterBtnIconRef = useRef();\n\n    function handleOpen() {\n\n        // Set filter open/close\n        setIsOpen(prevIsOpen => !prevIsOpen);\n\n        // If filter is opened\n        if (isOpen) {\n            // Add filter button animation\n            filterBtnIconRef.current.classList.replace(\"filter__up__btn__i--open\", \"filter__up__btn__i--close\");\n            // Remove filter border\n            filterRef.current.style.border = \"1px solid transparent\";\n        // Else if filter is closed\n        } else {\n            // Add filter button animation\n            filterBtnIconRef.current.classList.replace(\"filter__up__btn__i--close\", \"filter__up__btn__i--open\");\n            // Add filter border\n            filterRef.current.style.border = \"1px solid #ff33a0\";\n        }\n    }\n\n    const filterContent = filter\n        ? (\n            <div className=\"filter__content\">\n                <div className=\"filter__down\">\n                    <FilterBox\n                        key=\"filterbox-type\"\n                        filterType=\"TYPE\"\n                        options={filter.type}\n                    />\n                    <FilterBox\n                        key=\"filterbox-protection\"\n                        filterType=\"PROTECTION\"\n                        options={filter.protection}\n                    />\n                    <FilterBox\n                        key=\"filterbox-origin\"\n                        filterType=\"ORIGIN\"\n                        options={filter.origin}\n                    />\n                    <FilterBox\n                        key=\"filterbox-brand\"\n                        filterType=\"BRAND\"\n                        options={filter.brand}\n                    />\n                </div>\n                <button className=\"standardBtn\" onClick={()=>resetFilter()}>RESET</button>\n            </div>\n        )\n        : (\n            <LoadingSmall />\n        )\n\n    const filterDisplay = isOpen && filterContent;\n\n    return (\n        <div id=\"filter\" className=\"filter\" ref={filterRef}>\n            <div className=\"filter__up\">\n                <button className=\"filter__up__btn\" onClick={()=>handleOpen()}>\n                    <p className=\"filter__up__btn__p\">Filter</p>\n                    <i className=\"filter__up__btn__i filter__up__btn__i--close fas fa-plus\" ref={filterBtnIconRef}></i>\n                </button>\n            </div>\n            { filterDisplay }\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react'\n\nconst MainHero = ({ sloganH2, sloganP }) => {\n    return (\n        <div id=\"mainhero\" className=\"mainhero\">\n            <h2 className=\"mainhero__h2\">\n                { sloganH2 }\n            </h2>\n            <p className=\"mainhero__p\">\n                { sloganP }\n            </p>\n            <div className=\"mainhero__filter\" />\n        </div>\n    )\n}\n\nexport default MainHero;","import React, {  } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst MainItem = ({ item: { id, brand, name, price_current, price_original, img, is_sale  }}) => {\n\n    let price = is_sale\n        ? (\n            <div className=\"mainitem__down\">\n                <p className=\"mainitem__down__priceCurrent mainitem__down__priceCurrent--sale\">{price_current}</p>\n                <p className=\"mainitem__down__priceOriginal\">{price_original}</p>\n            </div>\n        )\n        : (\n            <div className=\"mainitem__down\">\n                <p className=\"mainitem__down__priceCurrent\">{price_current}</p>\n            </div>\n        )\n\n    return (\n        <Link to={`/item/${id}`} className=\"mainitem\">\n            <div className=\"mainitem__up\">\n                <img src={img} className=\"mainitem__up__img\" alt={name} />\n            </div>\n            <div className=\"mainitem__details\">\n                <div className=\"mainitem__mid\">\n                    <p className=\"mainitem__mid__name\">{name}</p>\n                    <p className=\"mainitem__mid__brand\">{brand.name}</p>\n                </div>\n                {price}\n            </div>\n        </Link>\n    )\n}\n\nexport default MainItem;\n","import React from 'react'\n\nconst MainEmpty = () => {\n    return (\n        <div id=\"mainEmpty\" className=\"mainEmpty\">\n            <i className=\"mainEmpty__i fas fa-exclamation-circle\"></i>\n            <p className=\"mainEmpty__p\">Opps! No result!</p>\n        </div>\n    )\n}\n\nexport default MainEmpty;","export function pagination({ input, itemsPerPage }) {\n    let result = [];\n    let temp = [];\n\n    input.forEach((item, i) => {\n        if ((i !== 0 & i % itemsPerPage === 0)) {\n            result.push(temp);\n            temp = [item];\n        } else {\n            temp.push(item)\n        }\n    })\n\n    if (result.length < Math.ceil(input.length / itemsPerPage)) {\n        result.push(temp);\n    }\n    \n    return result;\n\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport MainItem from './MainItem';\n\nimport { useItems } from \"../../context/ItemContext\";\nimport MainEmpty from './MainEmpty';\nimport { pagination } from '../../util/pagination';\nimport LoadingSmall from '../loading/LoadingSmall';\n\nconst MainMenu = () => {\n\n    const { items } = useItems();\n\n    const handlePagination = useCallback(\n        () => {\n            if (!items) return;\n\n            let input = items.displayItems.length > 0 ? items.displayItems : items.items;\n\n            let paginatedItems = pagination({ input, itemsPerPage: 4 })\n\n            let result = {\n                paginatedItems,\n                displayItems: paginatedItems[0],\n                pages: paginatedItems.length,\n                currentPage: 0,\n            }\n\n            return result;\n        },\n        [items],\n    )\n\n    const [paginated, setPaginated] = useState(()=>handlePagination());\n\n    useEffect(() => {\n        if (items) {\n            setPaginated(()=>handlePagination());\n        }\n    }, [items, setPaginated, handlePagination])    \n\n    const button = (paginated && paginated.currentPage < paginated.pages - 1) && (\n        <button className=\"mainmenu__showmore standardBtn--2\" onClick={()=>showMore()}>Show More</button>\n    )\n\n\n    const displayContent = items\n        ? items.displayItems.length > 0\n            ? (\n                <div id=\"mainmenu\" className=\"mainmenu\">\n                    <div id=\"mainmenu__con\" className=\"mainmenu__con\">\n                        { paginated && paginated.displayItems.map((item, i) => (\n                            <MainItem\n                                key={`mainitem-${i}`}\n                                item={item}\n                            />\n                        ))}\n                    </div>\n                    { button }\n                </div>\n            )\n            : (\n                <MainEmpty />\n            )\n        : (\n            <div id=\"mainmenu\" className=\"mainmenu\">\n                <LoadingSmall />\n            </div>\n        )\n\n        function showMore() {\n            if (paginated.currentPage === (paginated.pages - 1)) return;\n    \n            let newCurrentPage = paginated.currentPage + 1;\n    \n            let newPaginated = {\n                ...paginated,\n                displayItems: [...paginated.displayItems, ...paginated.paginatedItems[newCurrentPage]],\n                currentPage: newCurrentPage,\n                next: newCurrentPage < paginated.pages - 1\n            }\n    \n            setPaginated(newPaginated)\n            \n        }\n\n    return displayContent;\n}\n\nexport default MainMenu;","import React from 'react';\n\nimport { useDisplayItems } from \"../../../context/DisplayItemsContext\";\n\nconst Sort = () => {\n\n    const { sortOption, sortItems } = useDisplayItems();\n    function handleChange(event) {\n        let option = event.target.value;\n        sortItems({ option });\n    }\n\n    return (\n        <div id=\"sort\" className=\"sort\">\n            <select className=\"sort__select\" value={sortOption} onChange={(event)=>handleChange(event)}>\n                <option value=\"newest\">Newest</option>\n                <option value=\"oldest\">Oldest</option>\n                <option value=\"priceLow\">Price Low to High</option>\n                <option value=\"priceHigh\">Price High to Low</option>\n            </select>\n        </div>\n    )\n}\n\nexport default Sort;","import React from 'react';\nimport { useItems } from '../../context/ItemContext';\nimport Filter from './filter/Filter';\nimport MainHero from './MainHero';\nimport MainMenu from './MainMenu';\nimport Sort from './sort/Sort';\n\nconst Main = () => {\n\n    const { items } = useItems();\n\n    return (\n        <div id=\"main\" className=\"main\">\n            <MainHero sloganH2=\"WEAR MASK!\" sloganP=\"PROTECT YOURSELF AND YOUR LOVE ONES\" />\n            { items && <Filter /> }\n            { items && <Sort /> }\n            <MainMenu />\n        </div>\n    )\n}\n\nexport default Main;","import React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst AboutHero = () => {\n\n    let filterRef = useRef();\n    const [sloganActivate, setSloganActivate] = useState(false);\n\n    const slogan1 = (\n        <div className=\"aboutHero__slogan\">\n            <h1 className=\"aboutHero__slogan__h1\">\n                WEARING MASK IS\n            </h1>\n            <p className=\"aboutHero__slogan__p\">\n                UNCOMFORTABLE?\n            </p>\n            <p className=\"aboutHero__slogan__p\">\n                DIFFICULT TO BREATHE?\n            </p>\n            <p className=\"aboutHero__slogan__p\">\n                EXPENSIVE?\n            </p>\n        </div>\n    )\n\n    const slogan2 = (\n        <div className=\"aboutHero__slogan aboutHero__slogan--activate\">\n            <p className=\"aboutHero__slogan__p\">\n                ENJOY EVERY BREATH AGAIN\n            </p>\n        </div>\n    );\n\n    function handleMouseOverBtn() {\n        setSloganActivate(prevState => !prevState);\n        filterRef.current.className = filterRef.current.className === \"aboutHero__filter aboutHero__filter__activate\"\n            ? \"aboutHero__filter aboutHero__filter__notactivate\"\n            : \"aboutHero__filter aboutHero__filter__activate\";\n    }\n\n    return (\n        <div id=\"aboutHero\" className=\"aboutHero\">\n            <div className=\"aboutHero__filter aboutHero__filter__activate\" ref={filterRef} />\n            {sloganActivate ? slogan2: slogan1}\n            <div className=\"aboutHero__btn\">\n                <Link to=\"/\" className=\"aboutHero__link\" onMouseOver={()=>handleMouseOverBtn()} onMouseLeave={()=>handleMouseOverBtn()}>\n                    SHOP NOW\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default AboutHero;","import React from 'react';\n\nconst AboutUs = () => {\n\n    return (\n        <div className=\"aboutUs\">\n            <h1 className=\"aboutUs__h1\">\n                Who are we?\n            </h1>\n            <i className=\"aboutUs__i far fa-question-circle\"></i>\n            <p className=\"aboutUs__p\">\n                We are Mask Professionals specialise in finding the best masks from around the world.\n            </p>\n        </div>\n    )\n}\n\nexport default AboutUs;","import React from 'react';\n\n\nconst AboutDoCard = ({ job: { icon, name } }) => {\n    return (\n        <div className=\"aboutDo__card\">\n            <i className={`aboutDo__card__i ${icon}`} />\n            <p className=\"aboutDo__card__p\">{name}</p>\n        </div>\n    )\n}\n\nconst AboutDo = () => {\n\n    const ourJobs = [\n        {\n            icon: \"fas fa-search\",\n            name: \"WE FIND\",\n        },\n        {\n            icon: \"fas fa-tags\",\n            name: \"WE SELL\",\n        },\n        {\n            icon: \"fas fa-truck-loading\",\n            name: \"WE DELIVER\",\n        }\n    ]\n\n    return (\n        <div className=\"aboutDo\">\n            <h1 className=\"aboutDo__h1\">\n                What we do?\n            </h1>\n            <div className=\"aboutDo__con\">\n                {ourJobs.map((job, i) => (\n                    <AboutDoCard\n                        key={`aboutdo-${i}`}\n                        job={job}\n                    />\n                ))}\n            </div>\n            <p className=\"aboutDo__p\">\n                With us, you don't have to worry about price and quality anymore!\n            </p>\n            <p className=\"aboutDo__p\">\n                We do the most complicated tasks for you, so you can:\n            </p>\n            <ul className=\"aboutDo__ul\">\n                <li className=\"aboutDo__li\"><i className=\"aboutDo__li__i fas fa-check-circle\"></i> CHOOSE the best masks of the world</li>\n                <li className=\"aboutDo__li\"><i className=\"aboutDo__li__i fas fa-check-circle\"></i> BUY at the lowest possible price</li>\n                <li className=\"aboutDo__li\"><i className=\"aboutDo__li__i fas fa-check-circle\"></i> RECEIVE in the most convient way</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default AboutDo;\n","import React from 'react'\n\nconst AboutContactFormGrp = ({ label, type }) => {\n\n    let input = type === \"textarea\"\n        ? (\n            <textarea\n                id={`aboutContact__form--${label}`}\n                className=\"aboutContact__form__grp__textarea\"\n                autoComplete=\"off\"\n                rows=\"5\"\n                required\n            >\n            </textarea>\n        )\n        : (\n            <input \n                id={`aboutContact__form--${label}`}\n                className=\"aboutContact__form__grp__input\"\n                type={type}\n                autoComplete=\"off\"\n                required\n            />\n        )\n\n    return (\n        <div className=\"aboutContact__form__grp\">\n            <label htmlFor={`aboutContact__form--${label}`} className=\"aboutContact__form__grp__label\">{ label }</label>\n            {input}\n        </div>\n    )\n}\n\nconst AboutContactForm = ({ handleSubmit }) => {\n    return (\n        <form className=\"aboutContact__form\" onSubmit={(event)=>handleSubmit(event)}>\n                <AboutContactFormGrp\n                    key=\"aboutcontactform-name\"\n                    label=\"Name\"\n                    type=\"text\"\n                /> \n                <AboutContactFormGrp\n                    key=\"aboutcontactform-email\"\n                    label=\"Email\"\n                    type=\"email\"\n                />\n                <AboutContactFormGrp\n                    key=\"aboutcontactform-text\"\n                    label=\"Message\"\n                    type=\"textarea\"\n                /> \n            <button className=\"aboutContact__form__btn standardBtn--2\">Submit</button>\n        </form>\n    )\n}\n\nexport default AboutContactForm;","import React, { useState } from 'react'\nimport AboutContactForm from './AboutContactForm';\n\nconst AboutContact = () => {\n\n    const [sent, setSent] = useState(false);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSent(prevState => !prevState);\n    }\n\n    let displayContent = sent\n        ? (\n            <div className=\"aboutContact__thanks\">\n                <i className=\"aboutContact__thanks__i fas fa-heart\"></i>\n                <p className=\"aboutContact__thanks__p\">\n                    THANK YOU!\n                </p>\n                <p className=\"aboutContact__thanks__p\">\n                    We will get back to you soon!\n                </p>\n            </div>\n        )\n        : (\n            <AboutContactForm \n                handleSubmit={handleSubmit}\n            />\n        )\n\n\n    return (\n        <div id=\"aboutContact\" className=\"aboutContact\">\n            <h2 className=\"aboutContact__h2\">\n                CONTACT US\n            </h2>\n            <p className=\"aboutContact__p\">\n                We'd like to hear from you!\n            </p>\n            {displayContent}\n        </div>\n    )\n}\n\nexport default AboutContact;","import React from 'react'\nimport AboutHero from './AboutHero'\nimport AboutUs from './AboutUs'\nimport AboutDo from './AboutDo'\nimport AboutContact from './AboutContact'\n\nconst Home = () => {\n    return (\n        <div id=\"about\" className=\"about\">\n            <AboutHero />\n            <AboutUs />\n            <AboutDo />\n            <AboutContact />\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react'\n\nconst LoadingLarge = () => {\n    return (\n        <div id=\"loadingLarge\" className=\"loadingLarge\">\n            <i className=\"loadingLarge__i fas fa-spinner\"></i>\n        </div>\n    )\n}\n\nexport default LoadingLarge;\n","import React from 'react';\n// import InnerImageZoom from 'react-inner-image-zoom';\n// import 'react-inner-image-zoom/lib/InnerImageZoom/styles.min.css';\n\nconst ItemImg = ({ img }) => {\n\n    /*\n    const image = (\n        <InnerImageZoom \n            className=\"itemImg__img\" \n            src={img} \n            alt=\"product\"\n            fullscreenOnMobile={true}\n        />\n    )\n    */\n\n    return (\n        <div id=\"itemimg\" className=\"itemImg\">\n            <img \n                className=\"itemImg__img\" \n                src={img} \n                alt=\"product\"\n            />\n        </div>\n    )\n}\n\nexport default ItemImg;","import React from 'react'\n\nconst ItemInfoPrice = ({ isSale, priceCurrent, priceOriginal }) => {\n\n    const priceCurrentClass = isSale && \"itemInfo__price__current__sale\";\n\n    const priceOriginalContent = isSale && (\n        <p className=\"itemInfo__price__original\">\n            {priceOriginal}\n        </p>\n    )\n\n    return (\n        <div className=\"itemInfo__price\">\n            <p className={`itemInfo__price__current ${priceCurrentClass}`}>\n                <span className=\"itemInfo__price__current__sign\">$</span> {priceCurrent}\n            </p>\n            {priceOriginalContent}\n        </div>\n    )\n}\n\nexport default ItemInfoPrice;","import React from 'react'\n\nconst ItemInfoProtections = ({ protections }) => {\n    return (\n        <div id=\"itemInfo__protections\" className=\"itemInfo__protections\">\n            {protections.map((protection, i) => (\n                <p key={`protection-${i}`} className=\"itemInfo__protections__protection\">\n                    {protection}\n                </p>\n            ))}\n        </div>\n    )\n}\n\nexport default ItemInfoProtections;","import React from 'react'\n\nconst ItemInfoQuantity = ({ inventory, handleChangeQuantity, defaultValue }) => {\n\n    const numberOfOptions = inventory > 10 ? 10 : inventory;\n\n    const options = [];\n\n    if (numberOfOptions === 0) {\n        options.push(\n            <option key=\"quantity-option-outofstock\" value=\"out-of-stock\" disabled>OUT OF STOCK</option>\n        );\n    } else {\n        for (let i = 1; i <= numberOfOptions; i++) {\n            options.push(\n                <option\n                    key={`quantity-option-${i}`}\n                    value={i}\n                >\n                    {i}\n                </option>\n            )\n        }\n    }\n\n    return (\n        <select className=\"itemInfo__variations__select\" value={defaultValue} onChange={(event)=>handleChangeQuantity(event)}>\n            <option\n                key=\"variation-default\"\n                value=\"default\"\n                disabled\n            >\n                Select Quantity\n            </option>\n            {options}\n        </select>\n    )\n}\n\nexport default ItemInfoQuantity;","import React, { useState } from 'react';\n\nimport { useCart } from \"../../context/CartContext\";\nimport { useMessage } from '../../context/MessageContext';\n\nimport ItemInfoQuantity from './ItemInfoQuantity';\n\nconst ItemInfoVariations = ({ itemID, variations }) => {\n\n    const { addCartItem } = useCart();\n    const { displayMessage } = useMessage();\n\n    const [selectedVariation, setSelectedVariation] = useState(\"default\");\n    const [quantity, setQuantity] = useState(\"default\");\n\n    function handleSelect(event) {\n        // Get Item Variation ID from user selection\n        let selected = Number(event.target.value);\n\n        // Filter out the selected item for retrieving inventory\n        let selectedItem = variations.filter(item => item.id === selected)[0];\n\n        // Update state for re-render\n        setSelectedVariation(selectedItem);\n    }\n\n    function handleChangeQuantity(event) {\n        // Get Item Variation ID from user selection\n        setQuantity(Number(event.target.value));\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        if (quantity === \"default\") {\n            displayMessage({ type: \"Error\", content: \"Please select quantity.\" });\n            return;\n        }\n\n        addCartItem({\n            itemID,\n            variationID: selectedVariation.id,\n            quantity\n        })\n        resetState();\n        displayMessage({ type: \"Success\", content: \"Item added to cart.\" })\n    }\n\n    function resetState() {\n        setSelectedVariation(\"default\");\n        setQuantity(\"default\");\n    }\n\n    return (\n        <form id=\"itemInfo__variations\" className=\"itemInfo__variations\" onSubmit={(event)=>handleSubmit(event)}>\n            <select className=\"itemInfo__variations__select\" onChange={(event)=>handleSelect(event)} value={selectedVariation === \"default\" ? \"default\" : selectedVariation.id}>\n                <option\n                    key=\"variation-default\"\n                    value=\"default\"\n                    disabled\n                >\n                    Select Size\n                </option>\n                {variations.map(((variation, i) => (\n                    <option\n                        key={`variation-${i}`}\n                        value={variation.id}\n                    >\n                        {variation.size}\n                    </option>\n                )))}\n            </select>\n            <ItemInfoQuantity\n                key=\"iteminfoquantity\"\n                inventory={selectedVariation && selectedVariation.inventory}\n                defaultValue={quantity}\n                handleChangeQuantity={handleChangeQuantity}\n            />\n            <button className=\"itemInfo__variations__addCart standardBtn--2\">Add to Cart</button>\n        </form>\n    )\n}\n\nexport default ItemInfoVariations;","import React from 'react'\nimport ItemInfoPrice from './ItemInfoPrice'\nimport ItemInfoProtections from './ItemInfoProtections';\nimport ItemInfoVariations from './ItemInfoVariations';\n\nconst ItemInfo = ({ item: { id, name, brand, description, origin, mask_type, is_sale, price_current, price_original, protections, variations } }) => {\n    return (\n        <div id=\"iteminfo\" className=\"itemInfo\">\n            <h2 className=\"itemInfo__name\">\n                {name}\n            </h2>\n            <p className=\"itemInfo__brand\">\n                {brand.name}\n            </p>\n            <p className=\"itemInfo__description\">\n                {description}\n            </p>\n            <ItemInfoProtections\n                key=\"iteminfoprotections\"\n                protections={protections}\n            />\n            <p className=\"itemInfo__origin\">\n                This product is made in <span className=\"itemInfo__origin__span\">{origin.country}</span>.\n            </p>\n            <p className=\"itemInfo__type\">\n                This is a <span className=\"itemInfo__type__span\">{mask_type.category.toLowerCase()}</span> mask.\n            </p>\n            <ItemInfoPrice\n                key=\"iteminfoprice\"\n                isSale={is_sale}\n                priceCurrent={price_current}\n                priceOriginal={price_original}\n            />\n            <ItemInfoVariations\n                key=\"iteminfovariations\"\n                itemID={id}\n                variations={variations}\n            />\n        </div>\n    )\n}\n\nexport default ItemInfo;","import React from 'react';\nimport moment from \"moment\";\n\nconst ItemReviewsCard = ({ review: { id, review, timestamp, user } }) => {\n    return (\n        <div id={`review-${\"1\"}`} className=\"itemReviews__card\">\n            <div className=\"itemReviews__card__info\">\n                <p className=\"itemReviews__card__info__p\">\n                    {user.username}\n                    <span className=\"itemReviews__card__info__span\">\n                        •\n                    </span>\n                    {moment(timestamp).fromNow()}\n                </p>\n            </div>\n            <div className=\"itemReviews__card__content\">\n                <p className=\"itemReviews__card__content__p\">\n                    {review}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default ItemReviewsCard;","import React, { useCallback, useEffect, useState } from 'react';\n\nimport ItemReviewsCard from \"./ItemReviewsCard\";\n\nimport { pagination } from \"../../util/pagination\";\n\nconst ItemReviewsCon = ({ reviews }) => {\n\n    const setReviewsCallback = useCallback(\n        (prevReviews) => {\n            // SORT reviews\n            let sortedReviews = reviews.sort((a, b) => b.id - a.id);\n        \n            // PAGINATE reviews\n            let paginatedReviews = pagination({ input: sortedReviews, itemsPerPage: 5 });\n\n            let result = {\n                reviews,\n                paginatedReviews,\n                pages: paginatedReviews.length,\n                displayReviews: paginatedReviews[0],\n                currentPage: 0,\n                next: paginatedReviews.length - 1 > 0\n            }\n\n            if (prevReviews) {\n                result.currentPage = prevReviews.currentPage + 1;\n                result.next = prevReviews.currentPage + 1 < paginatedReviews.length\n            }\n\n            // SET reviews\n            return result\n        },\n        [reviews],\n    )\n\n    const [processedReviews, setProcessedReviews] = useState(()=>setReviewsCallback());\n\n    useEffect(() => {\n        setProcessedReviews(()=>setReviewsCallback())\n    }, [reviews, setReviewsCallback])\n\n    function showMore() {\n        if (processedReviews.currentPage === (processedReviews.pages - 1)) return;\n\n        let newCurrentPage = processedReviews.currentPage + 1;\n\n        let newProcessedReviews = {\n            ...processedReviews,\n            displayReviews: [...processedReviews.displayReviews, ...processedReviews.paginatedReviews[newCurrentPage]],\n            currentPage: newCurrentPage,\n            next: newCurrentPage < processedReviews.pages - 1\n        }\n\n        setProcessedReviews(newProcessedReviews)\n        \n    }\n\n    return (\n        <div id=\"itemReviews__con\" className=\"itemReviews__con\">\n            {processedReviews.displayReviews.map((review, i) => (\n                <ItemReviewsCard\n                    key={`itemreviewscard-${i}`}\n                    review={review}\n                />\n            ))}\n            {processedReviews.next && <button className=\"itemReviews__con__showMore standardBtn--2\" onClick={()=>showMore()}>Show more</button>}\n        </div>\n    )\n}\n\nexport default ItemReviewsCon;","import React, { useState } from 'react';\nimport LoadingSmall from \"../loading/LoadingSmall\";\n\nconst ItemReviewsForm = ({ submitReview }) => {\n\n    const [loading, setLoading] = useState(false);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        if (event.target.content.value.trim() === \"\") return;\n\n        setLoading(true);\n        submitReview(event.target.content.value).then(result => {\n            if (result) {\n                setLoading(false);\n                event.target.content.value = '';\n            }\n        })\n    }\n\n    let display = loading\n        ? (\n            <LoadingSmall />\n        )\n        : (\n            <form id=\"itemReviews__form\" className=\"itemReviews__form\" onSubmit={(event)=>handleSubmit(event)}>\n                <label className=\"itemReviews__form__label\">We appreciate your comment:</label>\n                <textarea\n                    id=\"itemReviews__form__textarea\"\n                    className=\"itemReviews__form__textarea\"\n                    autoComplete=\"off\"\n                    name=\"content\"\n                    rows=\"5\"\n                    required\n                />\n                <button type=\"submit\" className=\"standardBtn itemReviews__form__btn\">Submit</button>\n            </form>\n        )\n\n    return display;\n}\n\nexport default ItemReviewsForm;","import React from 'react'\n\nimport { useAuth } from \"../../context/AuthContext\";\n\nimport ItemReviewsCon from './ItemReviewsCon';\nimport ItemReviewsForm from './ItemReviewsForm';\n\nconst ItemReviews = ({ reviews, submitReview }) => {\n\n    const { user } = useAuth();\n\n    const content = reviews.length > 0\n        ? (\n            <ItemReviewsCon\n                key=\"itemreviewscon\"\n                reviews={reviews}\n            />\n        )\n        : (\n            <p className=\"itemReviews__empty\">\n                There's no review, yet.\n            </p>\n        )\n\n    return (\n        <div id=\"itemReviews\" className=\"itemReviews\">\n            <h2 className=\"itemReviews__h2\">\n                REVIEWS\n            </h2>\n            {content}\n            {user && <ItemReviewsForm submitReview={submitReview} />}\n        </div>\n    )\n}\n\nexport default ItemReviews;","import React, { useEffect, useState, useCallback } from 'react';\n\nimport { useAuth } from \"../../context/AuthContext\";\nimport { useItems } from \"../../context/ItemContext\";\n\nimport LoadingLarge from '../loading/LoadingLarge';\nimport ItemImg from \"./ItemImg\";\nimport ItemInfo from \"./ItemInfo\";\nimport ItemReviews from \"./ItemReviews\";\n\nimport { SERVER_URL } from \"../../util/serverVariables\";\n\nconst Item = (props) => {\n\n    const { itemId } = props.match.params;\n    const { items, updateItems } = useItems();\n    const { user } = useAuth();\n\n    const [item, setItem] = useState(\"loading\");\n    const [reviews, setReviews] = useState(null);\n\n    const getItem = useCallback(\n        (id) => {\n            let result = items.items.filter(item => item.id === Number(id))[0];\n            result.reviews && setReviews(result.reviews);\n            return result;\n        },\n        [items],\n    )\n\n    useEffect(() => {\n        if (items) {\n            setItem(getItem(itemId));\n        }\n    }, [items, getItem, itemId])\n\n    async function submitReview(reviewContent) {\n        return fetch(`${SERVER_URL}eshop/customer_review/create/${item.id}`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Authorization\": `Bearer ${user.access}`\n            },\n            body: JSON.stringify({\n                \"review\": reviewContent\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n            setReviews(result);\n\n            // Update item\n            let newItem = {...item, reviews: result};\n            updateItems({ itemID: item.id, newItem });\n            \n            return true;\n        })\n    }\n\n    const displayContent = item === \"loading\"\n        ? (\n            <LoadingLarge />\n        )\n        : item\n            ? (\n                <div id=\"itemContent\" className=\"itemContent\">\n                    <ItemImg \n                        key=\"itemimg\"\n                        img={item.img}\n                    />\n                    <ItemInfo \n                        key=\"iteminfo\"\n                        item={item}\n                    />\n                    <ItemReviews \n                        key=\"itemreviews\"\n                        reviews={reviews}\n                        itemID={item.id}\n                        setReviews={setReviews}\n                        submitReview={submitReview}\n                    />\n                </div>\n            )\n            : (\n                <div id=\"itemError\" className=\"itemError\">\n                    <h1 className=\"itemError__h1\">Opps</h1>\n                    <i className=\"itemError__i fas fa-exclamation-triangle\"></i>\n                    <p className=\"itemError__p\">Item not found.</p>\n                </div>\n            )\n\n    return (\n        <div id=\"item\" className=\"item\">\n            { displayContent }\n        </div>\n    )\n}\n\nexport default Item;","import { SERVER_URL } from \"./serverVariables\";\n\nexport async function getOrder({ uuid, user }) {\n    return fetch(`${SERVER_URL}eshop/trackorder/${uuid}`, {\n        headers: {\n            \"Authorization\": user && `Bearer ${user.access}`\n        }\n    })\n    .then(response => response.json())\n    .then(result => result);\n}","import React from 'react'\n\nconst TrackorderForm = ({ handleSubmit }) => {\n\n    return (\n        <form id=\"trackorderForm\" className=\"trackorderForm\" onSubmit={(event)=>handleSubmit(event)}>\n            <label className=\"trackorderForm__label\" htmlFor=\"trackorderForm__input\">\n                Please entre your order number:\n            </label>\n            <textarea\n                id=\"trackorderForm__input\"\n                className=\"trackorderForm__textarea\"\n                name=\"trackorderInput\"\n                type=\"text\"\n                rows=\"2\"\n                maxLength={36}\n                required\n            />\n            <button\n                className=\"trackorderForm__btn standardBtn--2\"\n                type=\"submit\"\n            >\n                Track order\n            </button>\n        </form>\n    )\n}\n\nexport default TrackorderForm;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport validateUUID from \"uuid-validate\";\n\nimport { useAuth } from \"../../context/AuthContext\";\n\nimport { getOrder } from \"../../util/getOrder\";\n\nimport LoadingSmall from \"../loading/LoadingSmall\";\nimport TrackorderForm from './TrackorderForm';\n\nconst Trackorder = () => {\n\n    const history = useHistory();\n\n    const { user } = useAuth();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const display = loading\n        ? (\n            <LoadingSmall />\n        )\n        : (\n            <TrackorderForm \n                key=\"trackorderform\"\n                handleSubmit={handleSubmit}\n            />\n        );\n    \n    const displayError = error && (\n        <p className=\"trackorder__error\">\n            Error: {error}\n        </p>\n    )\n\n    function handleSubmit(event) {        \n        event.preventDefault();\n        setLoading(true);\n\n        let uuid = event.target.trackorderInput.value;\n        let isValid = validateUUID(uuid, 4);\n        console.log(uuid);\n        if (isValid) {\n            getOrder({ uuid, user })\n            .then(result => {\n                console.log(result);\n                // If error\n                if (result.detail) {\n                    setError(result.detail);\n                    setLoading(false);\n                // If found\n                } else {\n                    setError(\"\");\n                    setLoading(false);\n                    /*\n                    history.push({\n                        pathname: `/order/${uuid}`,\n                        state: { item: result }\n                    });\n                    */\n\n                    history.push(`/order/${uuid}`)\n                }\n            })\n        } else {\n            setLoading(false);\n            setError(\"Invalid order number.\");\n        }\n    }\n\n    return (\n        <div id=\"trackorder\" className=\"trackorder\">\n            <h1 className=\"trackorder__h1\">\n                TRACK ORDER\n            </h1>\n            { display }\n            { displayError }\n        </div>\n    )\n}\n\nexport default Trackorder;","import React from 'react'\n\nconst OrderAddressCard = ({ address, title }) => {\n    const details = address && [address.firstname, address.lastname, address.flat, address.apartment, address.street, address.area, address.district];\n    const content = details\n        ? (\n            <div className=\"orderAddressCard__content\">\n                {details.map((item, i) => (\n                    <p key={`orderaddresscard-content-${title.toLowerCase()}-${i}`} className=\"orderAddressCard__content__p\">\n                        {item}\n                    </p>\n                ))}\n            </div>\n        )\n        : (\n            <div className=\"orderAddressCard__content\">\n                <p className=\"orderAddressCard__content__p\">\n                    Nil.\n                </p>\n            </div>\n        )\n    \n    return (\n        <div className=\"orderAddressCard\">\n            <p className=\"orderAddressCard__title\">\n                {title}\n            </p>\n            {content}\n        </div>\n    )\n}\n\nexport default OrderAddressCard;","import React from 'react'\nimport OrderAddressCard from './OrderAddressCard'\n\nconst OrderAddresses = ({ order: { shipping, billing }}) => {\n    return (\n        <div id=\"orderAddresses\" className=\"orderAddresses\">\n            <OrderAddressCard\n                key=\"orderaddressscard-shipping\"\n                title=\"Shipping Address\"\n                address={shipping}\n            />\n            <OrderAddressCard\n                key=\"orderaddressscard-billing\"\n                title=\"Billing Address\"\n                address={billing}\n            />\n        </div>\n    )\n}\n\nexport default OrderAddresses;","import React, { useEffect } from 'react';\nimport JsBarcode from \"jsbarcode\";\n\nconst OrderBarcode = ({ order: { uuid }}) => {\n\n    useEffect(() => {\n        JsBarcode(\"#orderBarcode__barcode\", uuid, {\n            lineColor: \"#ff33a0\",\n        })\n    })\n\n    return (\n        <div id=\"orderBarcode\" className=\"orderBarcode\">\n            <img id=\"orderBarcode__barcode\" className=\"orderBarcode__barcode\" alt=\"orderBarcode\" />\n        </div>\n    )\n}\n\nexport default OrderBarcode;","import React from 'react';\nimport moment from \"moment\";\n\nconst OrderBasicGrp = ({ title, data }) => {\n    return (\n        <div className=\"orderBasic__grp\">\n            <p className=\"orderBasic__grp__title\">\n                {title}\n            </p>\n            <p className=\"orderBasic__grp__data\">\n                {data}\n            </p>\n        </div>\n    )\n}\n\nconst OrderBasic = ({ timestampCreated, uuid }) => {\n    return (\n        <div className=\"orderBasic\">\n            <OrderBasicGrp\n                key=\"orderbasicgrp-orderdate\"\n                title=\"Order Date\"\n                data={moment(timestampCreated).format(\"Do MMMM YYYY, HH:mm:ss\")}\n            />\n            <OrderBasicGrp\n                key=\"orderbasicgrp-orderuuid\"\n                title=\"Order Number\"\n                data={uuid}\n            />\n        </div>\n    )\n}\n\nexport default OrderBasic;","import React from 'react'\n\nconst OrderItemCardDetails = ({ name, brand, size }) => {\n    return (\n        <div className=\"orderItemCard__details\">\n            <p className=\"orderItemCard__details__name\">\n                {name}\n            </p>\n            <p className=\"orderItemCard__details__brand\">\n                {brand}\n            </p>\n            <p className=\"orderItemCard__details__size\">\n                Size: <span className=\"orderItemCard__details__size__span\">{size}</span>\n            </p>\n        </div>\n    )\n}\n\nexport default OrderItemCardDetails;","import React from 'react'\n\nconst OrderItemCardPricebox = ({ title, data, gridArea }) => {\n    return (\n        <div className={`orderItemCard__pricebox orderItemCard__${gridArea}`}>\n            <p className=\"orderItemCard__pricebox__title\">\n                {title}\n            </p>\n            <p className=\"orderItemCard__pricebox__unit\">\n                {data}\n            </p>\n        </div>\n    )\n}\n\nexport default OrderItemCardPricebox;","import React from 'react'\nimport OrderItemCardDetails from './OrderItemCardDetails'\nimport OrderItemCardPricebox from './OrderItemCardPricebox'\n\nconst OrderItemCard = ({ \n    item: { \n        item: { \n            mask: { \n                name, brand, img\n            },\n            size\n        }, \n        quantity, price_original, price_subtotal \n    }}) => {\n    return (\n        <div className=\"orderItemCard\">\n            <div className=\"orderItemCard__img\">\n                <img className=\"orderItemCard__img__img\" src={img} alt=\"item_photo\" />\n            </div>\n            <OrderItemCardDetails\n                key=\"orderitemcard-details\"\n                name={name}\n                brand={brand.name}\n                size={size}\n            />\n            <OrderItemCardPricebox\n                key=\"orderitemcard-quantity\"\n                title=\"QUANTITY\"\n                gridArea=\"quantity\"\n                data={quantity}\n\n            />\n            <OrderItemCardPricebox\n                key=\"orderitemcard-unit\"\n                title=\"UNIT\"\n                gridArea=\"unit\"\n                data={price_original}\n            />\n            <OrderItemCardPricebox\n                key=\"orderitemcard-subtotal\"\n                title=\"SUBTOTAL\"\n                gridArea=\"subtotal\"\n                data={price_subtotal}\n            />\n        </div>\n    )\n}\n\nexport default OrderItemCard;\n","import React from 'react';\n\nimport OrderItemCard from \"./OrderItemCard\";\n\nconst OrderItems = ({ order: { items } }) => {\n    return (\n        <div id=\"orderItems\" className=\"orderItems\">\n            {items.map((item, i) => (\n                <OrderItemCard\n                    key={`orderitemcard-${i}`}\n                    item={item}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default OrderItems;","import React from 'react';\n\nconst OrderStatusCard = ({ name, active, next, icon }) => {\n    return (\n        <>\n            <div className={`orderStatusCard ${active ? \"orderStatusCard--active\" : \"orderStatusCard--inactive\"}`}>\n                <i className={`orderStatusCard__i ${icon}`}></i>\n                <p className=\"orderStatusCard__p\">{name}</p>\n            </div>\n            {next && <i className={`orderStatus__i fas fa-chevron-down ${active ? \"orderStatus__i--active\" : \"orderStatus__i--inactive\"}`}></i>}\n        </>\n    )\n}\n\nconst OrderStatus = ({ order: { shipping_method, status }}) => {\n    console.log(status);\n\n    const processMiddle = shipping_method === \"Instore Pick-up\"\n        ? (\n            <OrderStatusCard\n                key=\"orderstatuscard-middle\"\n                name=\"Ready for Pick Up\"\n                icon=\"fas fa-store-alt\"\n                active={status===\"Ready for Pick Up\" || status===\"Collected\"}\n                next={true}\n            />\n        )\n        : (\n            <OrderStatusCard\n                key=\"orderstatuscard-middle\"\n                name=\"Delivery in Progress\"\n                icon=\"fas fa-truck\"\n                active={status===\"Shipped\" || status===\"Delivered\"}\n                next={true}\n            />\n        )\n\n    const processCollect = shipping_method === \"Instore Pick-up\"\n        ? (\n            <OrderStatusCard\n                key=\"orderstatuscard-collect\"\n                name=\"Item Collected\"\n                icon=\"fas fa-hand-holding\"\n                active={status===\"Collected\"}\n            />\n        )\n        : (\n            <OrderStatusCard\n                key=\"orderstatuscard-collect\"\n                name=\"Item Delivered\"\n                icon=\"fas fa-truck-loading\"\n                active={status===\"Delivered\"}\n            />\n        )\n\n    return (\n        <div id=\"orderStatus\" className=\"orderStatus\">\n            <p className=\"orderStatus__title\">\n                STATUS\n            </p>\n            <div className=\"orderStatus__box\">\n                <OrderStatusCard\n                    key=\"orderstatuscard-received\"\n                    name=\"Received\"\n                    icon=\"fas fa-check\"\n                    active={true}\n                    next={true}\n                />\n                {processMiddle}\n                {processCollect}\n            </div>\n        </div>\n    )\n}\n\nexport default OrderStatus;","import React from 'react'\n\nconst OrderTotalGrp = ({ title, data, otherData, gridArea }) => {\n\n    const otherDataDisplay = otherData && (\n        <span className=\"orderTotal__grp__title__span\">\n            ({otherData})\n        </span>\n    );\n\n    return (\n        <div className={`orderTotal__grp orderTotal__grp--${gridArea}`}>\n            <p className=\"orderTotal__grp__title\">\n                {title}\n                <br></br>\n                <span className=\"orderTotal__grp__title__span\">{otherDataDisplay}</span>\n            </p>\n            <p className=\"orderTotal__grp__data\">\n                {data}\n            </p>\n        </div>\n    )\n}\n\nconst OrderTotal = ({ order: { shipping_method, shipping_price, subtotal } }) => {\n    return (\n        <div id=\"orderTotal\" className=\"orderTotal\">\n            <div className=\"orderTotal__box\">\n                <OrderTotalGrp\n                    key=\"ordertotalgrp-subtotal\"\n                    title=\"SUBTOTAL\"\n                    gridArea=\"subtotal\"\n                    data={subtotal}\n                    otherData=\"\"\n                />\n                <OrderTotalGrp\n                    key=\"ordertotalgrp-shipping\"\n                    title=\"SHIPPING\"\n                    gridArea=\"shipping\"\n                    data={shipping_price}\n                    otherData={shipping_method}\n                />\n                <OrderTotalGrp\n                    key=\"ordertotalgrp-total\"\n                    title=\"TOTAL\"\n                    gridArea=\"total\"\n                    data={(Number(shipping_price) + Number(subtotal)).toFixed(1)}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default OrderTotal;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport validateUUID from \"uuid-validate\";\n\nimport { useAuth } from \"../../context/AuthContext\";\nimport { useMessage } from \"../../context/MessageContext\";\n\nimport { getOrder } from \"../../util/getOrder\";\nimport LoadingLarge from \"../loading/LoadingLarge\";\nimport OrderAddresses from './OrderAddresses';\nimport OrderBarcode from './OrderBarcode';\nimport OrderBasic from './OrderBasic';\nimport OrderItems from './OrderItems';\nimport OrderStatus from './OrderStatus';\nimport OrderTotal from './OrderTotal';\n\nconst Order = (props) => {\n\n    const history = useHistory();\n\n    const { user } = useAuth();\n    const { displayMessage } = useMessage()\n\n    const [error, setError] = useState(\"\");\n    const [order, setOrder] = useState(()=>checkOrder());\n\n    useEffect(() => {\n        return () => {\n            setError(\"\");\n            setOrder(false);\n        }\n    }, [])\n\n    function checkOrder() {\n        \n        // GET OrderId\n        const { orderID } = props.match.params;\n        \n        // Validate orderID\n        if (!validateUUID(orderID, 4)) {\n            setError(\"Invalid order number.\");\n            return \"Invalid order number\";\n        } \n\n        getOrder({ uuid: orderID, user }).then(result => {\n            if (result.detail) {\n                setOrder(result);\n                setError(result.detail);\n                displayMessage({ type: \"Error\", content: \"You must login to view this order.\" })\n                history.push(\"/login\");\n                return;\n            }\n            setOrder(result);\n        });\n\n        return false;\n    }\n\n    const content = (\n        <div id=\"order\" className=\"order\">\n            <h1 className=\"order__h1\">ORDER</h1>\n            <OrderBasic\n                key=\"orderbasic\"\n                timestampCreated={order && order.timestamp_created}\n                uuid={order && order.uuid}\n            />\n            <OrderItems\n                key=\"orderitems\"\n                order={order}\n            />\n            <OrderTotal\n                key=\"ordertotal\"\n                order={order}\n            />\n            <OrderAddresses\n                key=\"orderaddresses\"\n                order={order}\n            />\n            <OrderStatus\n                key=\"orderstatus\"\n                order={order}\n            />\n            <OrderBarcode\n                key=\"orderbarcode\"\n                order={order}\n            />\n        </div>\n    )\n\n    const errorContent = (\n        <div id=\"orderError\" className=\"orderError\">\n            <h1 className=\"orderError__h1\">Opps</h1>\n            <i className=\"orderError__i fas fa-exclamation-triangle\"></i>\n            <p className=\"orderError__p\">{error}</p>\n        </div>\n    )\n\n    return order \n        ? error\n            ? errorContent\n            : content\n        : <LoadingLarge />;\n}\n\nexport default Order;","import React from 'react'\n\nconst CartItemCardImg = ({ img, alt }) => {\n    return (\n        <div className=\"cartItemCard__img\">\n            <img className=\"cartItemCard__img__img\" src={img} alt={alt} />\n        </div>\n    )\n}\n\nexport default CartItemCardImg;","import React from 'react'\n\nconst CartItemCardInfo = ({ name, brand, size }) => {\n    return (\n        <div className=\"cartItemCard__info\">\n            <p className=\"cartItemCard__info__name\">\n                {name}\n            </p>\n            <p className=\"cartItemCard__info__brand\">\n                {brand}\n            </p>\n            <p className=\"cartItemCard__info__size\">\n                {size}\n            </p>\n        </div>\n    )\n}\n\nexport default CartItemCardInfo;","import React from 'react'\n\nimport { useCart } from \"../../context/CartContext\";\n\nconst CartItemCardQuantity = ({ itemID, currentQuantity, setCurrentQuantity }) => {\n    \n    const { changeCartItemQuantity, getCartSubtotal } = useCart();\n\n    let options = [];\n\n    for (let i = 1; i <= 15; i++) {\n        options.push(\n            <option\n                key={`cartitemcardquantityoption-${i}`}\n                value={i}\n            >\n                {i}\n            </option>\n        )\n    }\n\n    function handleChange(event) {\n        let value = event.target.value;\n        changeCartItemQuantity({\n            variationID: itemID,\n            quantity: Number(value)\n        })\n        setCurrentQuantity(value);\n        getCartSubtotal();\n    }\n\n    return (\n        <div className=\"cartItemCard__quantity\">\n            <p className=\"cartItemCard__quantity__title\">\n                QUANTITY\n            </p>\n            <select className=\"cartItemCard__quantity__select\" defaultValue={currentQuantity} onChange={(event)=>handleChange(event)}>\n                {options}\n            </select>\n        </div>\n    )\n}\n\nexport default CartItemCardQuantity;\n","import React from 'react'\n\nconst CartItemCardSubtotal = ({ subtotal }) => {\n    return (\n        <div className=\"cartItemCard__subtotal\">\n            <p className=\"cartItemCard__subtotal__title\">\n                SUBTOTAL\n            </p>\n            <p className=\"cartItemCard__subtotal__price\">\n                {subtotal}\n            </p>\n        </div>\n    )\n}\n\nexport default CartItemCardSubtotal;\n","import React, { useState } from 'react';\n\nimport { useCart } from \"../../context/CartContext\";\nimport { useMessage } from \"../../context/MessageContext\";\n\nimport CartItemCardImg from './CartItemCardImg';\nimport CartItemCardInfo from './CartItemCardInfo';\nimport CartItemCardQuantity from './CartItemCardQuantity';\nimport CartItemCardSubtotal from './CartItemCardSubtotal';\n\nconst CartItemCard = ({ \n    item: { \n            id, size,\n            mask: { name, brand, img, is_sale, price_current, price_original },\n            cart: { quantity }\n        }\n    }) => {\n\n    const { removeCartItem } = useCart();\n    const { displayMessage } = useMessage();\n\n    const [currentQuantity, setCurrentQuantity] = useState(quantity);\n\n    function handleRemove() {\n        removeCartItem(id);\n        displayMessage({ type: \"Success\", content: \"Item removed from cart.\" })\n    }\n\n    return (\n        <div className=\"cartItemCard\">\n            <CartItemCardImg\n                key={`cartitemcartimg-${id}-${size.trim()}`}\n                img={img}\n                alt={name}\n            />\n            <CartItemCardInfo\n                key={`cartitemcartinfo-${id}-${size.trim()}`}\n                name={name}\n                brand={brand.name}\n                size={size}\n            />\n            <CartItemCardQuantity\n                key={`cartitemcardquantity-${id}-${size.trim()}`}\n                currentQuantity={currentQuantity}\n                itemID={id}\n                size={size}\n                setCurrentQuantity={setCurrentQuantity}\n            />\n            <CartItemCardSubtotal\n                key={`cartitemcardsubtotal-${id}-${size.trim()}`}\n                subtotal={Number(price_current * quantity).toFixed(1)}\n            />\n            <button className=\"cartItemCard__remove\" onClick={()=>handleRemove()}>\n                <i className=\"cartItemCard__remove__i fas fa-times\"></i>\n            </button>\n        </div>\n    )\n}\nexport default CartItemCard;\n","import React from 'react';\n\nimport { useCart } from '../../context/CartContext';\nimport LoadingSmall from '../loading/LoadingSmall';\nimport CartItemCard from './CartItemCard';\n\nconst CartItems = () => {\n\n\n    const { currentCart } = useCart();\n    \n    const cartItemsDisplay = currentCart && (\n        currentCart.map((item, i) => (\n            <CartItemCard\n                key={`cartitemcard-${i}`}\n                item={item}\n            />\n        ))\n    )\n\n    const content = currentCart\n        ? cartItemsDisplay\n        : <LoadingSmall />\n\n    return (\n        <div id=\"cartItems\" className=\"cartItems\">\n            {content}\n        </div>\n    )\n}\n\nexport default CartItems;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useCart } from '../../context/CartContext';\n\nconst CartTotal = () => {\n\n    const { subtotal } = useCart();\n\n    return (\n        <div id=\"cartTotal\" className=\"cartTotal\">\n            <div className=\"cartTotal__subtotal\">\n                <p className=\"cartTotal__subtotal__title\">\n                    SUBTOTAL\n                </p>\n                <p className=\"cartTotal__subtotal__price\">\n                    ${subtotal}\n                </p>\n            </div>\n            <Link to=\"/checkout\" className=\"cartTotal__subtotal__btn standardBtn--2\">CHECKOUT</Link>\n        </div>\n    )\n}\n\nexport default CartTotal;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { useCart } from \"../../context/CartContext\";\nimport LoadingLarge from '../loading/LoadingLarge';\n\nimport CartItems from \"./CartItems\";\nimport CartTotal from \"./CartTotal\";\n\nconst Cart = () => {\n\n    const { currentCart } = useCart();\n\n    const normalDisplay = (\n        <div id=\"cartContent\" className=\"cartContent\">\n            <CartItems />\n            <CartTotal />\n        </div>\n    )\n\n    const emptyDisplay = (\n        <div className=\"cartEmpty\">\n            <h1 className=\"cartEmpty__h1\">CART EMPTY</h1>\n            <i className=\"cartEmpty__i fas fa-box-open\"></i>\n            <Link className=\"cartEmpty__btn standardBtn--2\" to=\"/\">SHOP NOW</Link>\n        </div>\n    )\n\n    const content = currentCart\n        ? currentCart.length > 0\n            ? normalDisplay\n            : emptyDisplay\n        : <LoadingLarge />\n\n    return (\n        <div id=\"cart\" className=\"cart\">\n            <h1 className=\"cart__h1\">CART</h1>\n            {content}\n        </div>\n    )\n}\n\nexport default Cart;","import React from 'react'\n\nconst Account = () => {\n    return (\n        <div id=\"account\" className=\"account\">\n            Account\n        </div>\n    )\n}\n\nexport default Account;","import React from 'react'\n\nconst ReglogFormGrp = ({ label, type, error, name }) => {\n\n    const inputErrorClass = error && \"reglog__form__grp__input__error\"\n\n    return (\n        <div className=\"reglog__form__grp\">\n            <label htmlFor={`reglog-form-${label.replace(\" \", \"\").toLowerCase()}`} className=\"reglog__form__grp__label\">\n                { label }\n            </label>\n            <input\n                id={`reglog-form-${label.replace(\" \", \"\").toLowerCase()}`}\n                className={`reglog__form__grp__input ${inputErrorClass}`}\n                type={type}\n                name={`${label.replace(\" \", \"\").toLowerCase()}`}\n                autoComplete=\"off\"\n                required\n            />\n            <p className=\"reglog__form__grp__error\">{error}</p>\n        </div>\n    )\n}\n\nexport default ReglogFormGrp;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport ReglogFormGrp from './ReglogFormGrp';\n\nconst ReglogForm = ({ page, forms, btnLabel, name, handleSubmit, submitError }) => {\n\n    const reglogLink = btnLabel === \"Register\"\n        ? (\n            <p className=\"reglog__link\">\n                Alredy have an account? \n                <Link to=\"/login\" className=\"reglog__link__link\">LOGIN NOW!</Link>\n            </p>\n        )\n        : (\n            <p className=\"reglog__link\">\n                Don't have an account? \n                <Link to=\"/register\" className=\"reglog__link__link\">REGISTER Now!</Link>\n            </p>\n        )\n\n    return (\n        <form className=\"reglog__form\" onSubmit={(event)=>handleSubmit(event)}>\n            <h2 className=\"reglog__form__h2\">{ page }</h2>\n            {forms.map(({key, label, type, error})=> (\n                <ReglogFormGrp\n                    key={key}\n                    label={label}\n                    type={type}\n                    error={error}\n                    name={name}\n                />\n            ))}\n            {submitError && <p className=\"reglog__form__submit__error\">{submitError}</p>}\n            <button className=\"reglog__form__btn standardBtn\">{ btnLabel}</button>\n            { reglogLink }\n        </form>\n    )\n}\n\nexport default ReglogForm;","import React from 'react'\n\nconst RegistrationSuccess = () => {\n    return (\n        <div id=\"registrationSuccess\" className=\"registrationSuccess\">\n            <h1 className=\"registrationSuccess__h1\">\n                Registration Successful\n            </h1>\n            <i className=\"registrationSuccess__i far fa-check-circle\"></i>\n            <p className=\"registrationSuccess__p\">\n                Thank you for joining us!\n            </p>\n            <p className=\"registrationSuccess__p\">\n                You will be redirected to LOGIN shortly...\n            </p>\n        </div>\n    )\n}\n\nexport default RegistrationSuccess;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { useAuthFunctions } from '../../context/AuthContext';\nimport { useMessage } from '../../context/MessageContext';\n\nimport LoadingSmall from '../loading/LoadingSmall';\nimport ReglogForm from '../reglog/ReglogForm'\nimport RegistrationSuccess from './RegistrationSuccess';\n\nconst Register = () => {\n\n    const history = useHistory();\n\n    const { register } = useAuthFunctions();\n    const { displayMessage } = useMessage();\n    \n    const [loading, setLoading] = useState(false);\n    const [submitError, setSubmitError] = useState('');\n    const [errors, setErrors] = useState({\n        username: '',\n        email: '',\n        password: '',\n        confirmpassword: '',\n    })\n    const [regSuccess, setRegSuccess] = useState(false);\n\n    const FORM = [\n        {\n            key: \"reglogformgrp-username\",\n            label: \"Username\",\n            type: \"text\",\n            error: errors.username\n        },\n        {\n            key: \"reglogformgrp-email\",\n            label: \"Email\",\n            type: \"email\",\n            error: errors.email\n        },\n        {\n            key: \"reglogformgrp-password\",\n            label: \"Password\",\n            type: \"password\",\n            error: errors.password\n        },\n        {\n            key: \"reglogformgrp-confirmation\",\n            label: \"Confirm Password\",\n            type: \"password\",\n            error: errors.confirmpassword\n        },\n    ]\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        let data = {\n            username: document.querySelector(`#reglog-form-username`).value,\n            email: document.querySelector(`#reglog-form-email`).value,\n            password: document.querySelector(`#reglog-form-password`).value,\n            confirmpassword: document.querySelector(`#reglog-form-confirmpassword`).value,\n        }\n\n        setLoading(true);\n        \n        let isValid = checkValidity([\"username\", \"email\", \"password\", \"confirmpassword\"]);\n\n        if (isValid) {\n            register(data).then(result => {\n                if(!result) {\n                    setLoading(false);\n                    displayMessage({ type: \"Error\", content: \"Username and/or Email already exists.\"});\n                    setSubmitError(\"Username and/or Email already exists.\");\n                } else {\n                    setRegSuccess(true);\n                    setLoading(false);\n                    setTimeout(()=>history.push(\"/login\"), 3000);\n                }\n            })\n        } else {\n            setLoading(false);\n        }\n    }\n\n    function checkValidity(fields) {\n        \n        let isValid = true;\n\n        setErrors({\n            username: '',\n            email: '',\n            password: '',\n            confirmpassword: '',\n        })\n\n        fields.forEach(field => {\n            let input = document.querySelector(`#reglog-form-${field}`).value.trim().match(\" \");\n            if (input) {\n                isValid = false;\n\n                setErrors(prevErrors => ({\n                    ...prevErrors,\n                    [field]: `Invalid ${field}`\n                }))\n            }\n            if (field === \"password\" || field === \"confirmpassword\") {\n                let inputPassword = document.querySelector(`#reglog-form-password`).value;\n                let inputConfirmation = document.querySelector(`#reglog-form-confirmpassword`).value;\n\n                if (inputPassword !== inputConfirmation) {\n                    isValid = false;\n                    setErrors(prevErrors => ({\n                        ...prevErrors,\n                        password: `Password and Confirmation must match.`,\n                        confirmpassword: `Password and Confirmation must match.`,\n                    }))\n                }\n            }\n        })\n\n        return isValid;\n    }\n\n    return (\n        <div id=\"register\" className=\"reglog register\">\n            <div className=\"reglog__img\">\n                <h1 className=\"reglog__img__h1\">\n                    ALWAYS\n                    WEAR\n                    MASK\n                </h1>\n                <div className=\"reglog__img__filter\" />\n            </div>\n            {loading\n                ? (\n                    <LoadingSmall />\n                )\n                : regSuccess\n                    ? (\n                        <RegistrationSuccess />\n                    )\n                    : (\n                        <ReglogForm \n                            page=\"Create an account\"\n                            forms={FORM}\n                            btnLabel=\"Register\"\n                            handleSubmit={handleSubmit}\n                            submitError={submitError}\n                        />\n                    )\n            }\n        </div>\n    )\n}\n\nexport default Register;","import React, { useState } from 'react'\n\nimport { useAuthFunctions } from '../../context/AuthContext';\nimport { useMessage } from '../../context/MessageContext';\n\nimport LoadingSmall from '../loading/LoadingSmall';\nimport ReglogForm from '../reglog/ReglogForm'\n\nconst Login = () => {\n\n    const { login } = useAuthFunctions();\n    const { displayMessage } = useMessage();\n\n    const [loading, setLoading] = useState(false);\n    const [submitError, setSubmitError] = useState('');\n\n    const [errors, setErrors] = useState({\n        username: '',\n        password: '',\n    })\n\n    const FORMS = [\n        {\n            key: \"reglogformgrp-username\",\n            label: \"Username\",\n            type: \"text\",\n            error: errors.username\n        },\n        {\n            key: \"reglogformgrp-password\",\n            label: \"Password\",\n            type: \"password\",\n            error: errors.password\n        },\n    ]\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        let data = {\n            username: document.querySelector(`#reglog-form-username`).value,\n            password: document.querySelector(`#reglog-form-password`).value\n        }\n\n        setLoading(true);\n        \n        let isValid = checkValidity([\"username\", \"password\"]);\n\n        if (isValid) {\n            login(data).then(result => {\n                if(!result) {\n                    setLoading(false);\n                    displayMessage({ type: \"Error\", content: \"Invalid username and/or password.\"})\n                    setSubmitError(\"Invalid username/password\");\n                };\n            })\n        } else {\n            setLoading(false);\n        }\n    }\n\n    function checkValidity(fields) {\n        \n        let isValid = true;\n\n        setErrors({\n            username: '',\n            password: '',\n        })\n\n        fields.forEach(field => {\n            let input = document.querySelector(`#reglog-form-${field}`).value.trim().match(\" \");\n            if (input) {\n                isValid = false;\n\n                setErrors(prevErrors => ({\n                    ...prevErrors,\n                    [field]: `Invalid ${field}`\n                }))\n            }\n        })\n\n        return isValid;\n    }\n\n    return (\n        <div id=\"login\" className=\"reglog login\">\n            <div className=\"reglog__img\">\n                <h1 className=\"reglog__img__h1\">\n                    ALWAYS\n                    WEAR\n                    MASK\n                </h1>\n                <div className=\"reglog__img__filter\" />\n            </div>\n            {loading\n                ? <LoadingSmall />\n                : (\n                    <ReglogForm \n                        page=\"Welcome back\"\n                        forms={FORMS}\n                        btnLabel=\"Login\"\n                        handleSubmit={handleSubmit}\n                        name=\"login\"\n                        submitError={submitError}\n                    />\n                )\n            }\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react'\n\nexport const Error = () => {\n    return (\n        <div id=\"error\" className=\"error\">\n            Error\n        </div>\n    )\n}\n\nexport default Error;","import React from 'react'\n\nconst CheckoutFormGrp = ({ section, label, name, title, type, choices, handleSelectShipping, errors }) => {\n    let content;\n    let error = Object.keys(errors).length > 0 && errors[section][name];\n    let inputError = error && \"checkoutForm__grp__text__input__error\";\n    let radioError = error && \"checkoutForm__grp__radio__grp__con__error\";\n\n    function handleSelect(event) {\n        if (name === \"shipping_method\") {\n            handleSelectShipping(event);\n        }\n    }\n\n    switch (type) {\n        case \"text\":\n            content = (\n                <div key={`checkoutForm__grp__text`} className=\"checkoutForm__grp__text\">\n                    <label\n                        htmlFor={`checkoutForm__grp__text__${section}__${name}`}\n                        className=\"checkoutForm__grp__text__label\"\n                    >\n                        {label}\n                    </label>\n                    <input\n                        id={`checkoutForm__grp__text__${section}__${name}`}\n                        type=\"text\"\n                        name={`${section}-${name}`}\n                        className={`checkoutForm__grp__text__input ${inputError}`}\n                        autoComplete=\"off\"\n                        required\n                    />\n                </div>\n            )\n            break;\n        case \"number\":\n            content = (\n                <div key={`checkoutForm__grp__text`} className=\"checkoutForm__grp__text\">\n                    <label\n                        htmlFor={`checkoutForm__grp__text__${section}__${name}`}\n                        className=\"checkoutForm__grp__text__label\"\n                    >\n                        {label}\n                    </label>\n                    <input\n                        id={`checkoutForm__grp__text__${section}__${name}`}\n                        type=\"tel\"\n                        name={`${section}-${name}`}\n                        className={`checkoutForm__grp__text__input ${inputError}`}\n                        maxLength=\"16\"\n                        autoComplete=\"off\"\n                        required\n                    />\n                </div>\n            )\n            break;\n        case \"radio\":\n            content = (\n                <div className=\"checkoutForm__grp__radio__grp\">\n                    <p className=\"checkoutForm__grp__radio__grp__title\">\n                        {title}\n                    </p>\n                    <div className={`checkoutForm__grp__radio__grp__con ${radioError}`}>\n                        {\n                            choices.map((choice, i)=> (\n                                <div key={`checkoutForm__grp__radio--${label}--${i}`} className=\"checkoutForm__grp__radio\">\n                                    <input\n                                        id={`checkoutForm__grp__radio__${section}__${choice.value}`}\n                                        type=\"radio\"\n                                        name={`${section}-${name}`}\n                                        className=\"checkoutForm__grp__radio__input\"\n                                        value={choice.value}\n                                        onChange={(event)=>handleSelect(event)}\n                                    />\n                                    <label\n                                        htmlFor={`checkoutForm__grp__radio__${section}__${choice.value}`}\n                                        className=\"checkoutForm__grp__radio__label\"\n                                    >\n                                        {choice.display}\n                                    </label>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n            )\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className=\"checkoutForm__grp\">\n            { content }\n            { error && <p className=\"checkoutForm__grp__error\">{ errors[section][name] }</p>}\n        </div>\n    )\n}\n\nexport default CheckoutFormGrp;\n","import React from 'react'\nimport CheckoutFormGrp from './CheckoutFormGrp'\n\nexport const CheckoutFormItem = ({ title, fields, section, errors, handleSelectShipping }) => {\n    return (\n        <div className=\"checkoutForm__address\">\n            <h1 className=\"checkoutForm__address__h1\">\n                {title}\n            </h1>\n            {\n                fields.map((item, i) => (\n                    <CheckoutFormGrp\n                        key={`checkoutformgrp-${i}`}\n                        section={section}\n                        label={item.label}\n                        name={item.name}\n                        type={item.type}\n                        choices={item.choices}\n                        title={item.title}\n                        errors={errors}\n                        handleSelectShipping={handleSelectShipping}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default CheckoutFormItem;","export const CHECKOUT_FORM_FIELDS = {\n    shipping_method: [\n        {\n            label: \"Shipping Method\",\n            name: \"shipping_method\",\n            type: \"radio\",\n            title: \"Please choose a shipping method:\",\n            choices: [\n                {\n                    value: \"standard\",\n                    display: \"Standard (+$20)\"\n                },\n                {\n                    value: \"priority\",\n                    display: \"Priority (+$100)\"\n                }\n            ]\n        }\n    ],\n    shipping: [\n        {\n            label: \"First Name\",\n            name: \"firstname\",\n            type: \"text\",\n        },\n        {\n            label: \"Last Name\",\n            name: \"lastname\",\n            type: \"text\",\n        },\n        {\n            label: \"Flat / Room\",\n            name: \"flat\",\n            type: \"text\",\n        },\n        {\n            label: \"Building / Apartment\",\n            name: \"apartment\",\n            type: \"text\",\n        },\n        {\n            label: \"Street\",\n            name: \"street\",\n            type: \"text\",\n        },\n        {\n            label: \"Area\",\n            name: \"area\",\n            type: \"text\",\n        },\n        {\n            label: \"District\",\n            name: \"district\",\n            type: \"radio\",\n            title: \"District\",\n            choices: [\n                {\n                    value: \"Hong Kong Island\",\n                    display: \"Hong Kong Island\"\n                },\n                {\n                    value: \"Kowloon\",\n                    display: \"Kowloon\"\n                },\n                {\n                    value: \"New Territories\",\n                    display: \"New Territories\"\n                },\n            ]\n        }\n    ],\n    billing: [\n        {\n            label: \"First Name\",\n            name: \"firstname\",\n            type: \"text\",\n        },\n        {\n            label: \"Last Name\",\n            name: \"lastname\",\n            type: \"text\",\n        },\n        {\n            label: \"Flat / Room\",\n            name: \"flat\",\n            type: \"text\",\n        },\n        {\n            label: \"Building / Apartment\",\n            name: \"apartment\",\n            type: \"text\",\n        },\n        {\n            label: \"Street\",\n            name: \"street\",\n            type: \"text\",\n        },\n        {\n            label: \"Area\",\n            name: \"area\",\n            type: \"text\",\n        },\n        {\n            label: \"District\",\n            name: \"district\",\n            type: \"radio\",\n            title: \"District\",\n            choices: [\n                {\n                    value: \"Hong Kong Island\",\n                    display: \"Hong Kong Island\"\n                },\n                {\n                    value: \"Kowloon\",\n                    display: \"Kowloon\"\n                },\n                {\n                    value: \"New Territories\",\n                    display: \"New Territories\"\n                },\n            ]\n        }\n    ],\n    payment: [\n        {\n            label: \"Card Type\",\n            name: \"method\",\n            type: \"radio\",\n            title: \"Card Type\",\n            choices: [\n                {\n                    value: \"visa\",\n                    display: \"VISA\"\n                },\n                {\n                    value: \"master\",\n                    display: \"Mastercard\"\n                },\n            ]\n        },\n        {\n            label: \"Card Number\",\n            name: \"card_number\",\n            type: \"number\",\n        },\n        {\n            label: \"Card Holder's First Name\",\n            name: \"card_holder_firstname\",\n            type: \"text\",\n        },\n        {\n            label: \"Card Holder's Last Name\",\n            name: \"card_holder_lastname\",\n            type: \"text\",\n        },\n    ]\n}","import React from 'react'\n\nimport { CheckoutFormItem } from './CheckoutFormItem';\n\nimport { CHECKOUT_FORM_FIELDS } from \"../../data/form\";\n\nconst CheckoutForm = ({ shippingMethod, handleSelectShipping, errors }) => {\n\n    const shippingForm = shippingMethod && (\n        <CheckoutFormItem\n            key=\"checkoutformshippingaddresss\"\n            title=\"Shipping Address\"\n            fields={CHECKOUT_FORM_FIELDS.shipping}\n            section=\"shipping\"\n            errors={errors}\n        />\n    )\n\n    return (\n        <div id=\"checkoutDetails\" className=\"checkoutDetails\">\n            <CheckoutFormItem\n                key=\"checkoutform1\"\n                title=\"Shipping Method\"\n                fields={CHECKOUT_FORM_FIELDS.shipping_method}\n                section=\"shipping_method\"\n                handleSelectShipping={handleSelectShipping}\n                errors={errors}\n            />\n            {shippingForm}\n            <CheckoutFormItem\n                key=\"checkoutformbillingaddresss\"\n                title=\"Billing Address\"\n                fields={CHECKOUT_FORM_FIELDS.billing}\n                section=\"billing\"\n                errors={errors}\n            />\n            <CheckoutFormItem\n                key=\"checkoutformpayment\"\n                title=\"Payment\"\n                fields={CHECKOUT_FORM_FIELDS.payment}\n                section=\"payment\"\n                errors={errors}\n            />\n        </div>\n    )\n}\n\nexport default CheckoutForm; ","import React from 'react'\n\nconst CheckoutInfoItemCard = ({ item: { mask: { name, brand, price_current }, size, cart:{ quantity } }}) => {\n\n    const price = (Number(price_current) * quantity).toFixed(1);\n\n    return (\n        <div className=\"checkoutInfo__itemCard\">\n            <div className=\"checkoutInfo__itemCard__details\">\n                <p className=\"checkoutInfo__itemCard__name\">\n                    { name }\n                </p>\n                <p className=\"checkoutInfo__itemCard__brand\">\n                    { brand.name }\n                </p>\n                <p className=\"checkoutInfo__itemCard__size\">\n                    { size }\n                </p>\n                <p className=\"checkoutInfo__itemCard__quantity\">\n                    QUANTITY: <span className=\"checkoutInfo__itemCard__quantity__span\">{ quantity }</span>\n                </p>\n            </div>\n            <div className=\"checkoutInfo__itemCard__price\">\n                <p className=\"checkoutInfo__itemCard__price__price\">\n                    $ { price }\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default CheckoutInfoItemCard;","import React from 'react'\n\nconst CheckoutInfoPriceCard = ({ title, price }) => {\n    return (\n        <div className=\"checkoutInfo__display__priceCard\">\n            <p className=\"checkoutInfo__display__priceCard__title\">\n                {title}\n            </p>\n            <p className=\"checkoutInfo__display__priceCard__price\">\n                $ {price}\n            </p>\n        </div>\n    )\n}\n\nexport default CheckoutInfoPriceCard;","import React from 'react';\n\nimport { useCart } from \"../../context/CartContext\";\nimport LoadingSmall from '../loading/LoadingSmall';\nimport CheckoutInfoItemCard from './CheckoutInfoItemCard';\nimport CheckoutInfoPriceCard from './CheckoutInfoPriceCard';\n\nconst CheckoutInfo = ({ shipping, total }) => {\n\n    const { currentCart, subtotal } = useCart();\n\n    const displayInfo = currentCart && subtotal && (\n        <div className=\"checkoutInfo__display\">\n            <div className=\"checkoutInfo__display__items\">\n                {currentCart.map((item, i) => (\n                    <CheckoutInfoItemCard\n                        key={`checkoutinfodisplayitemcard-${i}`}\n                        item={item}\n                    />\n                ))}\n            </div>\n            <div className=\"checkoutInfo__display__price\">\n                <CheckoutInfoPriceCard\n                    key=\"checkoutinfopricecard-subtotal\"\n                    title=\"SUBTOTAL\"\n                    price={subtotal}\n                />\n                <CheckoutInfoPriceCard\n                    key=\"checkoutinfopricecard-shipping\"\n                    title=\"SHIPPING\"\n                    price={shipping}\n                />\n                <CheckoutInfoPriceCard\n                    key=\"checkoutinfopricecard-total\"\n                    title=\"TOTAL\"\n                    price={total}\n                />\n            </div>\n            <button className=\"checkout__btn standardBtn--2\">CONFIRM CHECKOUT</button>\n        </div>\n    )\n\n    const content = currentCart\n        ? displayInfo\n        : (\n            <LoadingSmall />\n        )\n\n    return (\n        <div id=\"checkoutInfo\" className=\"checkoutInfo\">\n            { content }\n        </div>\n    )\n}\n\nexport default CheckoutInfo; ","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { useAuth, useAuthFunctions } from \"../../context/AuthContext\";\nimport { useCart } from \"../../context/CartContext\";\nimport { useMessage } from '../../context/MessageContext';\n\nimport CheckoutForm from \"./CheckoutForm\";\nimport CheckoutInfo from \"./CheckoutInfo\";\n\nimport { SERVER_URL } from \"../../util/serverVariables\";\nimport { CHECKOUT_FORM_FIELDS } from \"../../data/form\";\n\nconst Checkout = () => {\n\n    const history = useHistory();\n    const { user } = useAuth();\n    const { logoutKeepCart } = useAuthFunctions();\n    const { cart, subtotal, resetCart } = useCart();\n    const { displayMessage } = useMessage();\n\n    const [shipping, setShipping] = useState(0);\n    const [shippingMethod, setShippingMethod] = useState(\"not_selected\")\n    const [total, setTotal] = useState(()=>calculateTotal());\n    const [errors, setErrors] = useState({\n        isValid: true,\n        shipping_method: {},\n        shipping: {},\n        billing: {},\n        payment: {},\n    });\n\n    const shippingPrice = {\n        default: 0,\n        standard: 20,\n        priority: 100,\n    }\n\n    useEffect(() => {\n        setTotal((Number(subtotal) + shipping).toFixed(1))\n    }, [shipping, subtotal])\n\n    function handleSelectShipping() {\n        const newShipping = document.querySelector(\"#checkoutContent\")[\"shipping_method-shipping_method\"].value;\n        setShipping(shippingPrice[newShipping]);\n        setShippingMethod(newShipping);\n        setTotal(calculateTotal(shippingPrice[newShipping]));\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        // Check form validity\n        let isValid = checkValidity({ sections: [\"shipping_method\", \"shipping\", \"billing\", \"payment\"] })\n        if (!isValid) return;\n\n        // Get cart data\n        let data = getCartData();\n        \n        // Submit order\n        submitOrder(data);\n    }\n\n    function calculateTotal(shippingPrice) {\n        let price = shippingPrice ? shippingPrice : shipping;\n        return (Number(subtotal) + price).toFixed(1);\n    }\n\n    function checkValidity({ sections }) {\n        const FORM = document.querySelector(\"#checkoutContent\");\n\n        // Reset Errors\n        setErrors({\n            isValid: true,\n            shipping_method: {},\n            shipping: {},\n            billing: {},\n            payment: {},\n        })\n\n        let isError = true;\n        \n        sections.forEach(section => {\n            CHECKOUT_FORM_FIELDS[section].forEach(field => {\n                let input = FORM[`${section}-${field.name}`].value.trim();\n                if (input === \"\") {\n                    setErrors(prevErrors => ({\n                        ...prevErrors,\n                        [section]: {\n                            ...prevErrors[section], \n                            [field.name]: `${field.label} must not be empty.`\n                        }\n                    }));\n                    isError = false;\n                }\n            });\n        })\n        return isError;\n    }\n\n    function getCartData() {\n        // Get user input\n        let shippingAddress = getFormInputs({section: \"shipping\", fields: CHECKOUT_FORM_FIELDS.shipping});\n        let billingAddress = getFormInputs({section: \"billing\", fields: CHECKOUT_FORM_FIELDS.billing});\n        let payment = getFormInputs({section: \"payment\", fields: CHECKOUT_FORM_FIELDS.payment});\n\n        // Data to be returned\n        let data = {\n            user: user && user.id,\n            shipping: shippingAddress,\n            billing: billingAddress,\n            payment,\n            shipping_method: shippingMethod,\n            cart: cart\n        }\n        return data;\n    }\n\n    function getFormInputs({section, fields}) {\n        const FORM = document.querySelector(\"#checkoutContent\");\n        let result = {};\n        fields.forEach(field => {\n            let input = FORM[`${section}-${field.name}`].value.trim();\n            result = {\n                ...result,\n                [field.name]: input\n            };\n            input === \"\" && setErrors(prevErrors => ({\n                ...prevErrors,\n                isValid: false,\n                [section]: {\n                    ...prevErrors[section], \n                    [field.name]: `${field.label} must not be empty.`\n                }\n            }));\n        });\n        return result;\n    }\n\n    function submitOrder(data) {\n\n        let request = {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        };\n\n        request.headers.Authorization = user && `Bearer ${user.access}`;\n        console.log(request)\n\n        fetch(`${SERVER_URL}eshop/createorder/`, request)\n        .then(response => response.json())\n        .then(result => {\n            console.log(result)\n\n            if (result.detail && result.detail === \"Given token not valid for any token type\") {\n                displayMessage({ type: \"Error\", content: \"Your previous login session is over. Please login again.\" });\n                logoutKeepCart();\n                history.push(\"/login\");\n                return;\n            }\n\n            resetCart();\n\n            history.push({\n                pathname: `/order/${result.uuid}`,\n                //state: { item: result }\n            });\n\n            return result;\n        })\n    }\n\n    return (\n        <div id=\"checkout\" className=\"checkout\">\n            <h1 className=\"checkout__h1\">CHECKOUT</h1>\n            <form id=\"checkoutContent\" className=\"checkoutContent\" onSubmit={(event)=>handleSubmit(event)}>\n                <CheckoutForm\n                    key=\"checkoutform\"\n                    shippingMethod={shippingMethod}\n                    handleSelectShipping={handleSelectShipping}\n                    handleSubmit={handleSubmit}\n                    errors={errors}\n                />\n                <CheckoutInfo \n                    key=\"checkoutinfo\"\n                    shipping={shipping}\n                    total={total}\n                />\n            </form>\n        </div>\n    )\n}\n\nexport default Checkout;","export const ADMIN_FORM_FIELDS = {\n    createItem: [\n        {\n            title: \"MASK NAME\",\n            name: \"name\",\n            type: \"text\",\n            required: true,\n        },\n        {\n            title: \"TYPE\",\n            name: \"mask_type\",\n            type: \"select\",\n            choiceSource: \"type\",\n        },\n        {\n            title: \"BRAND\",\n            name: \"brand\",\n            type: \"select\",\n            choiceSource: \"brand\"\n        },\n        {\n            title: \"BRAND (Others)\",\n            name: \"other_brand\",\n            type: \"text\",\n            required: false,\n        },\n        {\n            title: \"DESCRIPTION\",\n            name: \"description\",\n            type: \"text\",\n            required: true,\n        },\n        {\n            title: \"IMAGE URL\",\n            name: \"img\",\n            type: \"url\",\n            required: true,\n        },\n        {\n            title: \"PROTECTIONS\",\n            name: \"protection\",\n            type: \"checkbox\",\n            choiceSource: \"protection\"\n        },\n        {\n            title: \"COLOR\",\n            name: \"color\",\n            type: \"text\",\n            required: true,\n        },\n        {\n            title: \"ORIGINAL\",\n            name: \"origin\",\n            type: \"select\",\n            choiceSource: \"origin\"\n        },\n        {\n            title: \"PRICE\",\n            name: \"price\",\n            type: \"text-text\",\n            fields: [\n                {\n                    name: \"current\",\n                    required: true,\n                },\n                {\n                    name: \"original\",\n                    required: true,\n                }\n            ]\n        },\n        {\n            title: \"ITEM ON SALE?\",\n            name: \"is_sale\",\n            type: \"radio\",\n            choices: [\n                {\n                    choice: \"YES\",\n                    value: true\n                },\n                {\n                    choice: \"NO\",\n                    value: true\n                }\n            ]\n        },\n        {\n            title: \"ACTIVE ITEM?\",\n            name: \"is_active\",\n            type: \"radio\",\n            choices: [\n                {\n                    choice: \"YES\",\n                    value: true\n                },\n                {\n                    choice: \"NO\",\n                    value: true\n                }\n            ]\n        },\n        {\n            title: \"VARIATIONS\",\n            name: \"variations\",\n            type: \"checkbox-text\",\n            choices: [\n                {\n                    name: \"extraSmall\",\n                    value: \"XS\",\n                    choice: \"XS, Extra Small\",\n                },\n                {\n                    name: \"small\",\n                    value: \"S\",\n                    choice: \"S, Small\",\n                },\n                {\n                    name: \"medium\",\n                    value: \"M\",\n                    choice: \"M, Medium\",\n                },\n                {\n                    name: \"large\",\n                    value: \"L\",\n                    choice: \"L, Large\",\n                },\n                {\n                    name: \"extraLarge\",\n                    value: \"XL\",\n                    choice: \"XL, Extra Large\",\n                },\n                {\n                    name: \"kid\",\n                    value: \"KID\",\n                    choice: \"Kid\",\n                },\n                {\n                    name: \"junior\",\n                    value: \"JUN\",\n                    choice: \"Junior\",\n                },\n                {\n                    name: \"adult\",\n                    value: \"ADU\",\n                    choice: \"Adult\",\n                },\n            ]\n        },\n    ]\n}","import React from 'react';\n\nimport { useDisplayItems } from \"../../../context/DisplayItemsContext\";\n\nconst AdminItemFormGrp = ({ item: { title, name, type, choices, choiceSource, fields, required }, error }) => {\n\n    const { filter } = useDisplayItems();\n\n    let options;\n    let content;\n\n    switch (type) {\n        case \"select\":\n            \n            options = choices\n                ? (\n                    choices.map((choice, i) => (\n                        <option key={`choice-${name}-${i}`} value={choice.value}>\n                            {choice.display}\n                        </option>\n                    ))\n                )\n                : (\n                    filter[choiceSource].map((choice, i) => (\n                        <option key={`choice-${name}-${i}`} value={choice.id}>\n                            {choice.choice}\n                        </option>\n                    ))\n                )\n\n            content = (\n                <div className=\"adminItemFormGrp__con\">\n                    <select\n                        id={`adminItemFormGrp_${name}`}\n                        className=\"adminItemFormGrp__con__select\"\n                        name={name}\n                        defaultValue=\"default\"\n                        required\n                    >\n                        <option value=\"default\" disabled>\n                            Select { title }\n                        </option>\n                        { options }\n                        { name === \"brand\" && (\n                            <option value=\"others\">\n                                Other. Please provide.\n                            </option>\n                        )}\n                    </select>\n                </div>\n            )\n            break;\n\n        case \"checkbox\":\n            options = choices\n                ? (\n                    choices.map((choice, i) => (\n                        <div key={`${name}-checkbox-${i}`} className=\"adminItemFormGrp__checkbox\">\n                            <input\n                                id={`${name}-checkbox-${i}`}\n                                className=\"adminItemFormGrp__checkbox__checkbox\"\n                                type=\"checkbox\"\n                                name={name}\n                                value={choice.id}\n                            />\n                            <label className=\"adminItemFormGrp__checkbox__label\">\n                                { choice.choice }\n                            </label>\n                        </div>\n                    ))\n                )\n                : (\n                    filter[choiceSource].map((choice, i) => (\n                        <div key={`${name}-checkbox-${i}`} className=\"adminItemFormGrp__checkbox\">\n                            <input\n                                id={`${name}-checkbox-${i}`}\n                                className=\"adminItemFormGrp__checkbox__checkbox\"\n                                type=\"checkbox\"\n                                name={name}\n                                value={choice.id}\n                                data-name={choice.choice}\n                            />\n                            <label \n                                htmlFor={`${name}-checkbox-${i}`}\n                                className=\"adminItemFormGrp__checkbox__label\"\n                            >\n                                { choice.choice }\n                            </label>\n                        </div>\n                    ))\n                )\n\n            content = (\n                <div className=\"adminItemFormGrp__con\">\n                    { options }\n                </div>\n            )\n            break;\n        \n        case \"radio\":\n            options = choices\n                ? (\n                    choices.map((choice, i) => (\n                        <div key={`${name}-radio-${i}`} className=\"adminItemFormGrp__checkbox\">\n                            <input\n                                id={`${name}-radio-${i}`}\n                                className=\"adminItemFormGrp__checkbox__checkbox\"\n                                type=\"radio\"\n                                name={name}\n                                value={choice.value}\n                            />\n                            <label \n                                htmlFor={`${name}-radio-${i}`}\n                                className=\"adminItemFormGrp__checkbox__label\"\n                            >\n                                { choice.choice }\n                            </label>\n                        </div>\n                    ))\n                )\n                : (\n                    filter[choiceSource].map((choice, i) => (\n                        <div key={`${name}-radio-${i}`} className=\"adminItemFormGrp__checkbox\">\n                            <input\n                                id={`${name}-radio-${i}`}\n                                className=\"adminItemFormGrp__checkbox__checkbox\"\n                                type=\"radio\"\n                                name={name}\n                                value={choice.value}\n                            />\n                            <label \n                                htmlFor={`${name}-radio-${i}`}\n                                className=\"adminItemFormGrp__checkbox__label\"\n                            >\n                                { choice.choice }\n                            </label>\n                        </div>\n                    ))\n                )\n\n            content = (\n                <div className=\"adminItemFormGrp__con\">\n                    { options }\n                </div>\n            )\n            break;\n\n        case \"text-text\":\n\n            options = fields.map((item, i) => (\n                <div key={`adminItemFormGrp__con--texttext-${name}-${i}`} className=\"adminItemFormGrp__con--texttext\">\n                    <p className=\"adminItemFormGrp__con--texttext__p\">\n                        { item.name.toUpperCase() }\n                    </p>\n                    <input\n                        id={`adminItemFormGrp_${item.name}`}\n                        className=\"adminItemFormGrp__con__text\"\n                        type=\"text\"\n                        name={item.name}\n                        required={item.required}\n                    />\n                </div>\n            ))\n\n            content = (\n                <div className=\"adminItemFormGrp__con\">\n                    { options }\n                </div>\n            )\n            break;\n\n        case \"checkbox-text\":\n            \n            options = choices.map((choice, i) => (\n                <div key={`${name}-checkboxText-${i}-checkbox`} className=\"adminItemFormGrp__checkboxText__box\">\n                    <input\n                        id={`${name}-checkboxText-${i}-checkbox`}\n                        className=\"adminItemFormGrp__checkboxText__box__checkbox\"\n                        type=\"checkbox\"\n                        name={name}\n                        value={choice.value}\n                        data-name={choice.choice}\n                    />\n                    <label \n                        htmlFor={`${name}-checkboxText-${i}-checkbox`}\n                        className=\"adminItemFormGrp__checkboxText__box__label\"\n                    >\n                        { choice.choice }\n                    </label>\n                    <input\n                        id={`${name}-checkboxText-${i}-input`}\n                        className=\"adminItemFormGrp__checkboxText__box__input\"\n                        type=\"text\"\n                        name={choice.value}\n                        data-name={choice.choice}\n                    />\n                </div>\n            ))\n\n            content = (\n                <div className=\"adminItemFormGrp__con adminItemFormGrp__con--checkboxText\">\n                    { options }\n                </div>\n            )\n\n            break;\n\n        default:\n            content = (\n                <div className=\"adminItemFormGrp__con\">\n                    <input\n                        id={`adminItemFormGrp_${name}`}\n                        className=\"adminItemFormGrp__con__text\"\n                        type={type}\n                        name={name}\n                        required={required}\n                    />\n                </div>\n            )\n            break;\n    }\n\n    const errorClass = error && \"adminItemFormGrp--error\";\n\n    return (\n        <div className={`adminItemFormGrp ${errorClass}`}>\n            <h2 className=\"adminItemFormGrp__title\">\n                { title }\n            </h2>\n            {content}\n            { error && <p className=\"adminItemFormGrp--error__p\">ERROR: { error }</p> }\n        </div>\n    )\n}\n\nexport default AdminItemFormGrp;","import React, { useEffect, useState, useRef } from 'react'\nimport AdminItemFormGrp from './AdminItemFormGrp';\n\nconst AdminItemForm = ({ fields, createEdit, setCurrentPage, editItem }) => {\n\n    const formRef = useRef();\n\n    const [items, setItems] = useState(fields);\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        if (!editItem) return;\n        populateFormData();\n    })\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        setCurrentPage(\"loading\");\n\n        let isValid = true;\n        \n        items.forEach((item) => {\n            if (item.fields) {\n                item.fields.forEach(field => {\n                    if (!checkForm({ fieldName: item.name, name: field.name, type: item.type })) isValid = false;\n                })\n            } else {\n                if (!checkForm({ name: item.name, type: item.type })) isValid = false;\n            }\n        })\n        \n        if (!isValid) window.scrollTo(0, 0);\n\n        let data = {};\n\n        items.forEach((item) => {\n            if (item.fields) {\n                item.fields.forEach(field => {\n                    data = {\n                        ...data,\n                        ...getData({ fieldName: item.name, name: field.name, type: item.type })\n                    }\n                })\n            } else {\n                data = {\n                    ...data,\n                    ...getData({ name: item.name, type: item.type })\n                }\n            }\n        })\n\n        console.log(data);\n\n        createEdit({ data });\n    }\n\n    function checkForm({ fieldName, name, type }) {\n        const FORM = document.querySelector(\"#adminItemForm\");\n        let fieldKey = fieldName ? fieldName : name;\n\n        let errorMessage = '';\n        let input = FORM[name];\n        let isValid = true;\n        let newItems = items;\n\n\n        if (type === \"text\" || type === \"tel\" || type === \"url\") {\n            \n            if (name === \"other_brand\") return true;\n\n            // If no input or input is an empty string\n            if (!input.value || input.value.trim(\"\") === \"\") {\n                isValid = false;\n                errorMessage = \"This field must not be left empty.\"\n            }\n        \n        } else if (type === \"select\") {\n            \n            if (input.value === \"default\") {\n                isValid = false;\n                errorMessage = \"Please select ONE option.\"\n            }\n\n            if (name === \"brand\" && input.value === \"others\") {\n                input = FORM.other_brand.value;\n                if (!input || input.trim() === \"\") {\n                    isValid = false;\n                    fieldKey = \"other_brand\";\n                    errorMessage = \"An alternative brand must be provided or select an existing brand.\"\n                }\n            }\n\n        } else if (type === \"checkbox\") {\n\n            // Iterate through each input to check if any of them is checked\n            let selected = false;\n            input.forEach((item) => {\n                if (item.checked) selected = true;\n            })\n\n            // If nothing is selected, this section is invalid\n            if (!selected) {\n                isValid = false;\n                errorMessage = \"Please select AT LEAST ONE option.\"\n            };\n\n        } else if (name === \"variations\") {\n            let selected = false;\n\n            // Iterate through each input to check if any of them is selected and provided with a value\n            input.forEach(item => {\n\n                // If any item is selected and a value is given, then it is a valid input\n                if (item.checked && FORM[item.value].value.trim() !== \"\") selected = true;\n\n                // If nothing is selected or any item selected is not provided with a value, this section is invalid\n                if (!selected) {\n                    isValid = false;\n                    errorMessage = \"Please select AT LEAST ONE option and provide it with a quantity greater than 0.\"\n                }\n\n            })\n        } else if (type === \"radio\") {\n\n            // Iterate through each input to check if any of them is checked\n            let selected = false;\n            input.forEach((item) => {\n                if (item.checked) selected = true;\n            })\n\n            // If nothing is selected, this section is invalid\n            if (!selected) {\n                isValid = false;\n                errorMessage = \"Please select ONE option.\"\n            };\n\n        } else if (type === \"text-text\") {\n\n            // Iterate through each input to check if any of them is empty\n            let valid = input.value.trim() > 0;\n\n            // If nothing is selected, this section is invalid\n            if (!valid) {\n                isValid = false;\n                errorMessage = \"Please fill out all blanks of this section.\"\n            };\n        }\n\n        // If this section is INVALID\n        if (!isValid) {\n\n            setItems(newItems);\n            setErrors(prevErrors => ({\n                ...prevErrors,\n                [fieldKey]: errorMessage\n            }))\n            \n        } else {\n\n            // Delete corrected errors\n            if (errors[fieldKey]) {\n                setErrors(prevErrors => delete prevErrors[fieldKey]);\n            }\n\n        }\n        \n        return isValid;\n    }\n\n    function getData({ fieldName, name, type }) {\n        const FORM = document.querySelector(\"#adminItemForm\");\n        let fieldKey = fieldName ? fieldName : name;\n\n        let input = FORM[name];\n        let data = {};\n\n\n        if (type === \"text\" || type === \"tel\" || type === \"url\") {\n            \n            if (name === \"other_brand\") return true;\n\n            data[fieldKey] = input.value;\n        \n        } else if (type === \"select\") {\n            \n            if (name === \"brand\" && input.value === \"others\") {\n                data[fieldKey] = FORM.other_brand.value;\n            } else {\n                data[fieldKey] = Number(input.value);\n            }\n\n        } else if (type === \"checkbox\") {\n\n            let result = [];\n\n            input.forEach((item) => {\n                if (item.checked) result.push(Number(item.value));\n            })\n\n            data[fieldKey] = result;\n\n        } else if (name === \"variations\") {\n            \n            let result = [];\n\n            input.forEach(item => {\n\n                if (item.checked && FORM[item.value].value.trim() !== \"\") {\n                    result.push({\n                        size: item.value,\n                        inventory: FORM[item.value].value\n                    })\n                };\n\n            })\n\n            data[fieldKey] = result;\n\n        } else if (type === \"radio\") {\n\n            let result;\n\n            input.forEach((item) => {\n                if (item.checked) result = item.value;\n            })\n\n            data[fieldKey] = result;\n\n        } else if (type === \"text-text\") {\n\n            data[`price_${name}`] = input.value.trim();\n\n        }\n        \n        return data;\n    }\n\n    function populateFormData() {\n        const FORM = formRef.current;\n        \n        for (const key in editItem) {\n            const SPECIAL = {\n                SKIP: [\"id\", \"reviews\", \"timestamp_created\", \"timestamp_updated\"],\n                SELECT: [\"mask_type\", \"brand\", \"origin\"],\n                CHECKBOX: [\"protections\"],\n                OTHERS: [\"price_current\", \"price_original\"],\n                VARIATIONS: [\"variations\"]\n            }\n\n            if (SPECIAL.SKIP.includes(key)) continue;\n                \n            if (SPECIAL.SELECT.includes(key)) {\n                FORM[key].value = editItem[key].id;\n            } else if (SPECIAL.CHECKBOX.includes(key)) {\n                if (key === \"protections\") {\n                    FORM.protection.forEach(item => {\n                        if (editItem[key].includes(item.dataset.name.toUpperCase())) {\n                            item.checked = true;\n                        }\n                    })\n                }\n            } else if (SPECIAL.OTHERS.includes(key)) {\n                FORM[key.slice(6)].value = editItem[key];\n            } else if (SPECIAL.VARIATIONS.includes(key)) {\n                editItem[key].forEach(item => {\n                    FORM.variations.forEach(formItem => {\n                        if (formItem.dataset.name === item.size) {\n                            formItem.checked = true;\n                            FORM[formItem.value].value = item.inventory;\n                        }\n                    })\n                })\n            } else {\n                FORM[key].value = editItem[key];\n            }\n        }\n    }\n\n    return (\n        <form id=\"adminItemForm\" className=\"adminItemForm\" ref={formRef} onSubmit={(event)=>handleSubmit(event)}>\n            {items && items.map((item, i) => (\n                <AdminItemFormGrp\n                    key={`adminItemForm-${i}`}\n                    item={item}\n                    error={errors[item.name]}\n                />\n            ))}\n            <button className=\"adminItemForm__btn standardBtn--2\">Submit</button>\n        </form>\n    )\n}\n\nexport default AdminItemForm;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { useAuth } from \"../../../context/AuthContext\";\nimport { useItems } from \"../../../context/ItemContext\";\n\nimport { ADMIN_FORM_FIELDS } from \"../../../data/adminForm\";\nimport { SERVER_URL } from \"../../../util/serverVariables\";\nimport LoadingLarge from '../../loading/LoadingLarge';\n\nimport AdminItemForm from '../adminItemForm/AdminItemForm';\n\nconst AdminAdd = () => {\n\n    const history = useHistory();\n    const { user } = useAuth();\n    const { refreshItems } = useItems();\n    const [currentPage, setCurrentPage] = useState(\"form\");\n\n    function createItem({ data }) {\n        fetch(`${SERVER_URL}eshop/masks/create/`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Authorization\": `Bearer ${user.access}`\n            },\n            body: JSON.stringify(data)\n        })\n        .then(response => response.json())\n        .then(result => {\n            console.log(result);\n            if (result.details) {\n                setCurrentPage(\"form\");\n                return;\n            } else {\n                let newID = result.mask.id\n                refreshItems().then(result => {\n                    if (!result) return;\n                    history.push(`/item/${newID}`);\n                })\n            }\n        })\n    }\n\n    const DISPLAY = {\n        loading: <LoadingLarge />,\n        form: (\n                <AdminItemForm\n                key=\"adminitemform\"\n                fields={ADMIN_FORM_FIELDS.createItem}\n                createEdit={createItem}\n                setCurrentPage={setCurrentPage}\n            />\n        )\n    }\n\n    return (\n        <div id=\"adminAdd\" className=\"adminAdd\">\n            <h1 className=\"adminAdd__h1\">\n                CREATE A NEW ITEM\n            </h1>\n            { DISPLAY[currentPage] }\n        </div>\n    )\n}\n\nexport default AdminAdd;","import React, { useRef } from 'react'\n\nconst AdminEditSearch = ({ searchItem, setCurrentPage }) => {\n\n    const itemIDRef = useRef();\n\n    function handleSearch(event) {\n        event.preventDefault();\n        setCurrentPage(\"loading\");\n        searchItem({ itemID: Number(itemIDRef.current.value) });\n    }\n\n    return (\n        <form id=\"adminEditSearch\" className=\"adminEditSearch\" onSubmit={(event)=>handleSearch(event)}>\n            <label\n                htmlFor=\"adminEditSearch__input\"\n                className=\"adminEditSearch__label\"\n            >\n                Please entre an item number:\n            </label>\n            <input\n                id=\"adminEditSearch__input\"\n                className=\"adminEditSearch__input\"\n                type=\"tel\"\n                ref={itemIDRef}\n                required\n            />\n            <button type=\"submit\" className=\"adminEditSearch__btn standardBtn--2\">Search</button>\n        </form>\n    )\n}\n\nexport default AdminEditSearch;","import React, { useState } from 'react'\n\nimport { useAuth } from \"../../../context/AuthContext\";\nimport { useItems } from \"../../../context/ItemContext\";\n\nimport { SERVER_URL } from \"../../../util/serverVariables\";\nimport { ADMIN_FORM_FIELDS } from \"../../../data/adminForm\";\nimport LoadingLarge from '../../loading/LoadingLarge';\nimport AdminItemForm from '../adminItemForm/AdminItemForm';\nimport AdminEditSearch from './AdminEditSearch';\n\nconst AdminEdit = () => {\n\n    const { user } = useAuth();\n    const { items } = useItems();\n\n    const [item, setItem] = useState(false);\n    const [currentPage, setCurrentPage] = useState(\"search\");\n\n    function updateItem({ data }) {\n        console.log(\"UPDATE\");\n        console.log(data);\n\n        fetch(`${SERVER_URL}eshop/masks/update/${item.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Authorization\": `Bearer ${user.access}`\n            },\n            body: JSON.stringify(data)\n        })\n        .then(response => response.json())\n        .then(result => {\n            console.log(result);\n        })\n\n\n        setCurrentPage(\"form\");\n    }\n\n    function searchItem({ itemID }) {\n        console.log(itemID);\n        console.log(items.items);\n        let result = items.items.filter(item => item.id === itemID);\n        setItem(result[0]);\n        setCurrentPage(\"form\");\n    }\n\n    const DISPLAY = {\n        loading: <LoadingLarge />,\n        form: (\n                <AdminItemForm\n                key=\"adminitemform\"\n                fields={ADMIN_FORM_FIELDS.createItem}\n                setCurrentPage={setCurrentPage}\n                createEdit={updateItem}\n                editItem={item}\n            />\n        ),\n        search: (\n            <AdminEditSearch \n                key=\"admineditsearch\"\n                searchItem={searchItem}\n                setCurrentPage={setCurrentPage}\n            />\n        )\n    }\n\n    return (\n        <div id=\"adminEdit\" className=\"adminEdit\">\n            <h1 className=\"adminEdit__h1\">\n                EDIT ITEM\n            </h1>\n            { DISPLAY[currentPage] }\n        </div>\n    )\n}\n\nexport default AdminEdit;","import React from 'react'\n\nconst AdminMainItemsCard = ({ title, data }) => {\n    return (\n        <div id=\"adminMainItemsCard\" className=\"adminMainItemsCard\">\n            <p className=\"adminMainItemsCard__title\">\n                {title}\n            </p>\n            <p className=\"adminMainItemsCard__data\">\n                {data}\n            </p>\n        </div>\n    )\n}\n\nexport default AdminMainItemsCard;","import React from 'react';\n\nimport { useItems } from \"../../../context/ItemContext\";\n\nimport AdminMainItemsCard from \"./AdminMainItemsCard\";\n\nconst AdminMainItems = () => {\n\n    const { items } = useItems();\n\n    return (\n        <div className=\"adminMainItems\">\n            <div className=\"adminMainItems__icon\">\n                <i className=\"adminMainItems__icon__i fas fa-chess-pawn\"></i>\n            </div>\n            <div className=\"adminMainItems__details\">\n                <AdminMainItemsCard\n                    key=\"adminmainitemscard-totalitems\"\n                    title=\"Total Items\"\n                    data={items.items.length}\n                />\n                <AdminMainItemsCard\n                    key=\"adminmainitemscard-totalsale\"\n                    title=\"On-sale\"\n                    data={items.items.filter(item => item.is_sale).length}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default AdminMainItems;","import React from 'react';\n\nimport AdminMainItems from \"./AdminMainItems\";\n\nconst AdminMain = () => {\n    return (\n        <div id=\"adminMain\" className=\"adminMain\">\n            <AdminMainItems />\n        </div>\n    )\n}\n\nexport default AdminMain;","import React from 'react'\n\nconst AdminNavItem = ({ icon, page, link, setCurrentPage }) => {\n    return (\n        <button className=\"adminNav__btn\" onClick={()=>setCurrentPage(link)}>\n            <i className={`adminNav__btn__i ${icon}`}></i>\n            <p className=\"adminNav__btn__p\">{page}</p>\n        </button>\n    )\n}\n\nexport default AdminNavItem;","import React from 'react';\nimport AdminNavItem from './AdminNavItem';\n\nconst AdminNav = ({ setCurrentPage }) => {\n    return (\n        <div id=\"adminNav\" className=\"adminNav\">\n            <AdminNavItem\n                key=\"adminnavitem-home\"\n                icon=\"fas fa-home\"\n                page=\"HOME\"\n                link=\"home\"\n                setCurrentPage={setCurrentPage}\n            />\n            <AdminNavItem\n                key=\"adminnavitem-additem\"\n                icon=\"fas fa-plus\"\n                page=\"ADD ITEM\"\n                link=\"additem\"\n                setCurrentPage={setCurrentPage}\n            />\n            <AdminNavItem\n                key=\"adminnavitem-edititem\"\n                icon=\"fas fa-pencil-alt\"\n                page=\"EDIT ITEM\"\n                link=\"edititem\"\n                setCurrentPage={setCurrentPage}\n            />\n            <AdminNavItem\n                key=\"adminnavitem-orders\"\n                icon=\"fas fa-scroll\"\n                page=\"ORDERS\"\n                link=\"orders\"\n                setCurrentPage={setCurrentPage}\n            />\n        </div>\n    )\n}\n\nexport default AdminNav;\n","import React from 'react'\n\nconst AdminOrders = () => {\n    return (\n        <div id=\"adminOrders\" className=\"adminOrders\">\n            ADMINORDERS\n        </div>\n    )\n}\n\nexport default AdminOrders;","import React, { useState } from \"react\";\nimport AdminAdd from './adminAdd/AdminAdd';\nimport AdminEdit from \"./adminEdit/AdminEdit\";\nimport AdminMain from './adminMain/AdminMain';\nimport AdminNav from './adminNav/AdminNav'\nimport AdminOrders from \"./adminOrders/AdminOrders\";\n\nconst Admin = () => {\n\n    const [currentPage, setCurrentPage] = useState(\"home\");\n\n    const PAGES = {\n        home: <AdminMain />,\n        additem: <AdminAdd />,\n        edititem: <AdminEdit />,\n        orders: <AdminOrders />\n    }\n\n    const content = PAGES[currentPage];\n\n    return (\n        <div id=\"admin\" className=\"admin\">\n            <AdminNav \n                key=\"adminnav\"\n                setCurrentPage={setCurrentPage}\n            />\n            <div id=\"adminCon\" className=\"adminCon\">\n                { content }\n            </div>\n        </div>\n    )\n}\n\nexport default Admin;","import React from 'react'\n\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Main from \"../../components/main/Main\";\nimport About from \"../../components/about/About\";\nimport Item from \"../../components/item/Item\";\nimport Trackorder from \"../../components/trackorder/Trackorder\";\nimport Order from \"../../components/order/Order\";\nimport Cart from '../cart/Cart';\nimport Account from \"../../components/account/Account\";\nimport Register from \"../../components/register/Register\";\nimport Login from \"../../components/login/Login\";\nimport Error from \"../../components/error/Error\";\n\nimport { useAuth } from \"../../context/AuthContext\";\nimport { useCart } from \"../../context/CartContext\";\nimport Checkout from '../checkout/Checkout';\nimport Admin from '../admin/Admin';\n\nconst Content = () => {\n\n    const { user, admin } = useAuth();\n    const { cart } = useCart();\n\n    const cartPage = (\n        <Route exact path=\"/cart\">\n            {cart.length === 0 ? <Redirect to=\"/\" /> : <Cart />}\n        </Route>\n    )\n\n    const checkout = (\n        <Route exact path=\"/checkout\">\n            {cart.length === 0 ? <Redirect to=\"/\" /> : <Checkout />}\n        </Route>\n    )\n\n    const register = (\n        <Route exact path=\"/register\">\n            {user ? <Redirect to=\"/\" /> : <Register />}\n        </Route>\n    )\n\n    const login = (\n        <Route exact path=\"/login\">\n            {user ? <Redirect to=\"/\" /> : <Login />}\n        </Route>\n    )\n\n    const account = (\n        <Route exact path=\"/account\">\n            {user ? <Account /> : <Redirect to=\"/\" />}\n        </Route>\n    )\n\n    const adminPage = (\n        <Route exact path=\"/admin\">\n            {admin ? <Admin /> : <Redirect to=\"/\" />}\n        </Route>\n    )\n\n    return (\n        <div className=\"main-con\">\n            <Switch>\n                <Route path=\"/\" component={Main} exact />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/item/:itemId\" component={Item} />\n                <Route path=\"/order\" component={Trackorder} exact />\n                <Route path=\"/trackorder\" component={Trackorder} exact />\n                <Route path=\"/order/:orderID\" component={Order} />\n                <Route path=\"/cart\" component={Cart} exact />\n                { cartPage }\n                { checkout }\n                { register }\n                { login }\n                { account }\n                { adminPage }\n                <Route path=\"*\" component={Error} />\n            </Switch>\n        </div>\n    )\n}\n\nexport default Content;","import './App.css';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { AuthProvider } from \"./context/AuthContext\";\nimport { CartProvider } from \"./context/CartContext\";\nimport { ItemProvider } from \"./context/ItemContext\";\nimport { DisplayItemsProvider } from \"./context/DisplayItemsContext\";\nimport { MessageProvider } from \"./context/MessageContext\";\nimport Navbar from './components/navbar/Navbar';\nimport Footer from './components/footer/Footer';\nimport Content from './components/content/Content';\n\nconst App = () => {\n\n    return (\n        <div className=\"App\">\n            <AuthProvider>\n                <ItemProvider>\n                    <DisplayItemsProvider>\n                        <CartProvider>\n                            <MessageProvider>\n                                <Router>\n                                    <Navbar />\n                                    <Content />\n                                    <Footer />\n                                </Router>\n                            </MessageProvider>\n                        </CartProvider>\n                    </DisplayItemsProvider>\n                </ItemProvider>\n            </AuthProvider>\n        </div>\n    );\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}